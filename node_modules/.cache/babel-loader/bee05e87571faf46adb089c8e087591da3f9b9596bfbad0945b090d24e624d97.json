{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* eslint-disable */\nexport function initScript() {\n  function onDOMContentLoaded() {\n    console.log('DOM fully loaded and parsed');\n    // Your script logic here\n    document.querySelectorAll('header *').forEach(element => {\n      element.style.transition = 'color 2s';\n      element.style.color = ''; // Reset to original color\n    });\n    let shakeQueue = [];\n    let isShaking = false;\n    let pressCount = 0;\n    let pressed = false;\n    let resetTimeout;\n    const maxAngle = 360; // Maximum angle to prevent excessive shaking\n    const minDuration = 0.2; // Minimum duration to prevent excessive speed\n\n    let canPlayVideo = true;\n    let currentTimeoutId; // Variable to store the current timeout ID\n\n    const videoSources = [{\n      src: \"/assets/vid/home1.mp4\",\n      class: \"homevideo1\",\n      description: \"Sunbathing, beers, and ocean breezes on the Mediterranean!\"\n    }, {\n      src: \"/assets/vid/home2.mp4\",\n      class: \"homevideo2\",\n      description: \"Ducks enjoying a swim by the oceanside, weaving between the boats.\"\n    }, {\n      src: \"/assets/vid/home3.mp4\",\n      class: \"homevideo3\",\n      description: \"A cat strolling on the ancient stone steps, shot in Athens.\"\n    }];\n    let nonPlayed = [...videoSources];\n    let currentVideoSource = videoSources[0];\n    function isMobilePhone() {\n      const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n      return /android|iPhone|iPod/i.test(userAgent);\n    }\n    function isTouchScreen() {\n      const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n      return /android|iPhone|iPad|iPod/i.test(userAgent);\n    }\n    function changeVideoSource() {\n      // Get a new random index from nonPlayed\n      const newIndex = Math.floor(Math.random() * nonPlayed.length);\n\n      // Select the new video source using the new index\n      const source = nonPlayed.splice(newIndex, 1)[0]; // Remove the selected video from nonPlayed\n      currentVideoSource = source;\n      const videoElement = document.getElementById('videoElement');\n      const currentSourceElement = videoElement.querySelector('source');\n      currentSourceElement.setAttribute('src', source.src);\n      videoElement.setAttribute('class', source.class);\n      videoElement.load();\n\n      // Update the description content\n      const descriptionContentElement = document.getElementById('descriptionContent');\n      descriptionContentElement.innerHTML = `${source.description}<br><p>Click for color and sound!</p>`;\n    }\n    function preloadVideos() {\n      videoSources.forEach(videoData => {\n        const video = document.createElement('video');\n        video.src = videoData.src;\n        video.preload = 'auto';\n        video.autoplay = true;\n        video.loop = true;\n        video.muted = true;\n        video.style.display = 'none'; // Hide the video element\n        document.body.appendChild(video);\n      });\n    }\n    function updateSubtitle() {\n      const subtitleElement = document.getElementById('welcomeSubtitle');\n      const isMobile = window.matchMedia(\"(max-width: 768px)\").matches;\n      if (isMobile) {\n        subtitleElement.textContent = \"Hello! I'm Han-yu, a junior at HKU, majoring in AI. I love to explore new places and code apps. I'm ready to share my journey with you!\";\n      } else {\n        subtitleElement.textContent = \"Hello! I'm Han-yu (Henry), a junior at HKU, majoring in Applied AI. I love to explore new places and code apps. I'm excited to have you here and share my journey with you!\";\n      }\n    }\n    function getTextWidth(text, font) {\n      const canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement(\"canvas\"));\n      const context = canvas.getContext(\"2d\");\n      context.font = font;\n      const metrics = context.measureText(text);\n      return metrics.width;\n    }\n    function getCssStyle(element, prop) {\n      return window.getComputedStyle(element, null).getPropertyValue(prop);\n    }\n    function getCanvasFont(el) {\n      const fontWeight = getCssStyle(el, 'font-weight') || 'normal';\n      const fontSize = getCssStyle(el, 'font-size') || '16px';\n      const fontFamily = getCssStyle(el, 'font-family') || 'Times New Roman';\n      return `${fontWeight} ${fontSize} ${fontFamily}`;\n    }\n    function adjustTitle() {\n      const videoElement = document.getElementById('videoElement');\n      const imageElement = document.getElementById('imageElement');\n      const titleElement = document.getElementById('welcomeTitle');\n      const subtitleElement = document.getElementById('welcomeSubtitle');\n      const compassIcon = document.getElementById('compassIcon');\n      const mediaElement = videoElement.style.display !== 'none' ? videoElement : imageElement;\n      const mediaHeight = mediaElement.clientHeight;\n      const availableWidth = document.querySelector('.welcome-text').clientWidth;\n\n      // Adjust the font size and line height of the title to fit the width\n      let titleFontSize = 1; // Start with a smaller font size\n      titleElement.style.fontSize = `${titleFontSize}em`;\n      let iconScaleFactor = 0.3; // Scale factor to adjust the icon size relative to the text\n      compassIcon.style.fontSize = `${titleFontSize * iconScaleFactor}em`;\n      let textWidth = getTextWidth(titleElement.textContent.replace('O', ''), getCanvasFont(titleElement)) + compassIcon.clientWidth;\n      while (textWidth < availableWidth && titleFontSize < 5) {\n        // Constrain max font size to 5em\n        titleFontSize += 0.1;\n        titleElement.style.fontSize = `${titleFontSize}em`;\n        compassIcon.style.fontSize = `${titleFontSize * iconScaleFactor}em`;\n        textWidth = getTextWidth(titleElement.textContent.replace('O', ''), getCanvasFont(titleElement)) + compassIcon.clientWidth;\n      }\n      while (textWidth > availableWidth && titleFontSize > 0.5) {\n        // Constrain min font size to 0.5em\n        titleFontSize -= 0.1;\n        titleElement.style.fontSize = `${titleFontSize}em`;\n        compassIcon.style.fontSize = `${titleFontSize * iconScaleFactor}em`;\n        textWidth = getTextWidth(titleElement.textContent.replace('O', ''), getCanvasFont(titleElement)) + compassIcon.clientWidth;\n      }\n    }\n    function adjustSubtitle() {\n      const videoElement = document.getElementById('videoElement');\n      const imageElement = document.getElementById('imageElement');\n      const titleElement = document.getElementById('welcomeTitle');\n      const subtitleElement = document.getElementById('welcomeSubtitle');\n      const compassIcon = document.getElementById('compassIcon');\n      const mediaElement = videoElement.style.display !== 'none' ? videoElement : imageElement;\n      const mediaHeight = mediaElement.clientHeight;\n      const availableWidth = document.querySelector('.welcome-text').clientWidth;\n\n      // Fix the title font size and adjust the subtitle to match the height of the video\n      let subtitleFontSize = 1;\n      subtitleElement.style.fontSize = `${subtitleFontSize}em`;\n      let totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n      while (totalHeight < mediaHeight && subtitleFontSize < 3) {\n        // Constrain max font size to 3em\n        subtitleFontSize += 0.01;\n        subtitleElement.style.fontSize = `${subtitleFontSize}em`;\n        totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n      }\n\n      // Reduce font size and line height if the total height exceeds the video height\n      while (totalHeight > mediaHeight && subtitleFontSize > 0.5) {\n        // Ensure font size does not go below 0.5em\n        subtitleFontSize -= 0.01;\n        subtitleElement.style.fontSize = `${subtitleFontSize}em`;\n        totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n      }\n\n      // Adjust the line height of the subtitle element to fit within the media height\n      let subtitleLineHeight = 1.4; // Starting line height\n      subtitleElement.style.lineHeight = subtitleLineHeight;\n      totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n      while (totalHeight < mediaHeight && subtitleLineHeight < 2) {\n        // Constrain max line height to 2\n        subtitleLineHeight += 0.1;\n        subtitleElement.style.lineHeight = subtitleLineHeight;\n        totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n      }\n      while (totalHeight > mediaHeight && subtitleLineHeight > 1) {\n        // Ensure line height does not go below 1\n        subtitleLineHeight -= 0.1;\n        subtitleElement.style.lineHeight = subtitleLineHeight;\n        totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n      }\n    }\n    function updateTitles() {\n      updateSubtitle();\n      adjustTitle();\n      const isSmallScreen = window.matchMedia(\"(max-width: 600px)\").matches;\n      if (isSmallScreen) {\n        document.getElementById('welcomeTitle').style.fontSize = '2em';\n        document.getElementById('compassIcon').style.fontSize = '1.1em';\n      }\n      adjustSubtitle();\n    }\n    function typeWriterEffect(text, element, delay = 100, callback) {\n      // Clear any existing timeout to interrupt the previous typing effect\n      if (currentTimeoutId) {\n        clearTimeout(currentTimeoutId);\n      }\n      element.innerHTML = '';\n      let index = 0;\n      const spans = [];\n\n      // Step 1: Create a span for each character\n      for (let i = 0; i < text.length; i++) {\n        const span = document.createElement('span');\n        span.className = 'typed';\n        span.style.color = 'transparent'; // Initially transparent\n        span.textContent = text[i];\n        element.appendChild(span);\n        spans.push(span);\n      }\n\n      // Step 2: Turn each span into the text color one by one\n      function reveal() {\n        if (index < spans.length) {\n          const isDarkMode = document.body.classList.contains('dark-mode');\n          const textColor = isDarkMode ? '#fafafa' : '#252525'; // Change text color based on theme\n\n          spans[index].style.transition = `color 2s`;\n          spans[index].style.color = textColor;\n          index++;\n          currentTimeoutId = setTimeout(reveal, delay); // Store the timeout ID\n        } else {\n          if (callback) callback();\n        }\n      }\n      reveal();\n    }\n    function videoTransition() {\n      let fadeOutApplied = false;\n      const transitionOverlay = document.getElementById('transitionOverlay');\n      transitionOverlay.style.transition = 'opacity 0.3s ease-in-out';\n      videoElement.addEventListener('timeupdate', () => {\n        const timeLeft = videoElement.duration - videoElement.currentTime;\n        if (timeLeft < 0.6 && !fadeOutApplied) {\n          // Adjust the time threshold as needed\n          transitionOverlay.style.opacity = '1';\n          fadeOutApplied = true;\n        }\n      });\n      videoElement.addEventListener('timeupdate', () => {\n        if (videoElement.currentTime > 0.2 && videoElement.currentTime < 1.2) {\n          transitionOverlay.style.opacity = '0';\n          fadeOutApplied = false; // Reset the flag when the video starts playing again\n        }\n      });\n\n      // videoElement.addEventListener('playing', () => {\n      //     transitionOverlay.style.opacity = '0';\n      //     fadeOutApplied = false; // Reset the flag when the video starts playing again\n      // });\n    }\n    function processShakeQueue() {\n      if (shakeQueue.length === 0 || isShaking) return;\n      isShaking = true;\n      const {\n        newAngle,\n        newDuration\n      } = shakeQueue.shift();\n      const compassIcon = document.getElementById('compassIcon');\n      compassIcon.style.setProperty('--shake-angle', `${newAngle}deg`);\n      compassIcon.style.setProperty('--shake-duration', `${newDuration}s`);\n      compassIcon.classList.add('shake');\n      setTimeout(() => {\n        compassIcon.classList.remove('shake');\n        isShaking = false;\n        processShakeQueue(); // Process the next shake in the queue\n      }, newDuration * 1000);\n    }\n    function switchVideoSource() {\n      const videoElement = document.getElementById('videoElement');\n      const transitionOverlay = document.getElementById('transitionOverlay');\n      const descriptionOverlay = document.getElementById('descriptionOverlay');\n      const currentSourceElement = videoElement.querySelector('source');\n      const currentSource = currentSourceElement.getAttribute('src');\n\n      // If nonPlayed is empty, refill it with a copy of videoSources\n      if (nonPlayed.length === 0) {\n        nonPlayed = [...videoSources];\n      }\n\n      // Get a new random index from nonPlayed\n      const newIndex = Math.floor(Math.random() * nonPlayed.length);\n\n      // Select the new video source using the new index\n      const newVideoSource = nonPlayed.splice(newIndex, 1)[0]; // Remove the selected video from nonPlayed\n      currentVideoSource = newVideoSource;\n\n      // Apply flip effect\n      if (!isMobilePhone()) {\n        descriptionOverlay.style.opacity = 0.5;\n      }\n      videoElement.classList.remove('flip2');\n      videoElement.classList.add('flip');\n      transitionOverlay.classList.remove('flip2');\n      transitionOverlay.classList.add('flip');\n      descriptionOverlay.classList.remove('flip2');\n      descriptionOverlay.classList.add('flip');\n\n      // Listen for the midpoint of the flip to change the source\n      videoElement.addEventListener('animationend', () => {\n        // Change the source and load the new video\n        videoElement.pause(); // Pause the video before changing the source\n        videoElement.querySelector('source').src = newVideoSource.src;\n        videoElement.load(); // Load the new video source\n\n        // Restart the flip animation for the second half of the transition\n        videoElement.classList.remove('flip');\n        transitionOverlay.classList.remove('flip');\n        descriptionOverlay.classList.remove('flip');\n\n        // Play the new video source\n        videoElement.play();\n        if (!videoElement.muted) {\n          const descriptionContentElement = document.getElementById('descriptionContent');\n          descriptionContentElement.innerHTML = `${currentVideoSource.description}<br><p>Click to silence and fade!</p>`;\n        } else {\n          const descriptionContentElement = document.getElementById('descriptionContent');\n          descriptionContentElement.innerHTML = `${currentVideoSource.description}<br><p>Click for color and sound!</p>`;\n        }\n\n        // Add the flip class back to complete the flip animation\n        videoElement.classList.add('flip2');\n        transitionOverlay.classList.add('flip2');\n        descriptionOverlay.classList.add('flip2');\n\n        // Ensure the flip class is removed after the animation completes\n        videoElement.addEventListener('animationend', () => {\n          videoElement.classList.remove('flip2');\n          transitionOverlay.classList.remove('flip2');\n          descriptionOverlay.classList.remove('flip2');\n          videoElement.setAttribute('class', newVideoSource.class);\n          descriptionOverlay.style.opacity = '';\n        }, {\n          once: true\n        });\n      }, {\n        once: true\n      });\n    }\n    function createHint() {\n      // Create a new <small> element\n      var hintParagraph = document.createElement(\"small\");\n\n      // Set the class and style of the new <p> element\n      hintParagraph.id = \"hint\";\n      hintParagraph.className = \"tipcolor-2\";\n      hintParagraph.style.float = \"right\";\n\n      // Set the text content of the new element\n      hintParagraph.textContent = 'Click the compass!';\n\n      // Find the element with the class \"header\"\n      var headerElement = document.querySelector(\".header-title\");\n\n      // Append the new <p> element to the header element\n      if (headerElement) {\n        headerElement.insertBefore(hintParagraph, headerElement.children[2] || null);\n      }\n    }\n    function compassFlash() {\n      // const hintParagraph = document.getElementById('hint');\n      // hintParagraph.classList.remove(\"tipcolor-2\");\n      // hintParagraph.classList.add(\"tipcolor-1\");\n\n      const compassIcon = document.getElementById('compassIcon');\n      compassIcon.style.transition = 'color 1.5s';\n\n      // Function to toggle between the classes\n      function toggleTipColor() {\n        compassIcon.classList.add(\"tipcolor-1\");\n        setTimeout(function () {\n          compassIcon.classList.remove(\"tipcolor-1\");\n        }, 800);\n      }\n\n      // Set an interval to toggle the classes every 4000ms if pressed is false\n      const hintFlash = setInterval(function () {\n        if (!pressed) {\n          toggleTipColor();\n        } else {\n          clearInterval(hintFlash); // Clear the interval\n        }\n      }, 2400);\n    }\n    function displayWelcomeContent() {\n      const titleElement = document.getElementById('welcomeTitle');\n      titleElement.style.transition = 'color 2s';\n      titleElement.style.color = ''; // Reset to original color\n      const subtitleText = document.getElementById('welcomeSubtitle').textContent;\n      const subtitleElement = document.getElementById('welcomeSubtitle');\n      subtitleElement.style.textAlign = 'justify'; // Change to justify after typing is complete\n      subtitleElement.style.textAlignLast = 'justify'; // Change to justify after typing is complete\n      subtitleElement.style.MozTextAlignLast = 'justify'; // Change to justify after typing is complete\n\n      typeWriterEffect(subtitleText, subtitleElement, 10, () => {\n        setTimeout(() => {\n          document.querySelectorAll('header *').forEach(element => {\n            element.style.transition = 'color 2s';\n            element.style.color = ''; // Reset to original color\n          });\n          document.querySelectorAll('footer *').forEach(element => {\n            element.style.transition = 'color 2s';\n            element.style.color = ''; // Reset to original color\n          });\n          const quoteElement = document.getElementById('welcomeQuote');\n          quoteElement.style.transition = 'color 2s';\n          quoteElement.style.color = ''; // Reset to original color\n\n          const overlay = document.getElementById('overlay');\n          overlay.style.pointerEvents = 'none'; // Disable pointer events to allow clicks\n\n          setTimeout(() => {\n            compassFlash();\n\n            // Reset the transition property after the color transition is complete\n            setTimeout(() => {\n              document.querySelectorAll('header *').forEach(element => {\n                element.style.transition = 'color 0.5s';\n              });\n              document.querySelectorAll('footer *').forEach(element => {\n                element.style.transition = 'color 0.5s';\n              });\n            }, 2000); // Match this duration with the color transition time (2 seconds)\n          }, 1000);\n        }, 1000);\n      });\n    }\n    function setupDescriptionOverlay() {\n      const videoElement = document.getElementById('videoElement');\n      const descriptionOverlay = document.querySelector('.description-overlay');\n      if (!isTouchScreen()) {\n        videoElement.addEventListener('mouseenter', () => {\n          descriptionOverlay.style.opacity = '0.5';\n        });\n        videoElement.addEventListener('mouseleave', () => {\n          descriptionOverlay.style.opacity = '0';\n        });\n      }\n    }\n    document.getElementById('compassIcon').addEventListener('click', function () {\n      if (canPlayVideo) {\n        switchVideoSource();\n      }\n      pressed = true;\n      const compassIcon = document.getElementById('compassIcon');\n      // const hintParagraph = document.getElementById('hint');\n      compassIcon.classList.remove(\"tipcolor-1\");\n      compassIcon.classList.remove(\"tipcolor-2\");\n      // try{\n      //     hintParagraph.classList.add(\"tipcolor-2\");\n      // } catch (error) {\n      //     console.error(error);\n      // } \n\n      pressCount++;\n\n      // Calculate new angle and duration based on the number of presses\n      let newAngle = Math.min(15 + pressCount * 6, maxAngle); // Increase angle by 6 degrees per press, up to maxAngle\n      let newDuration = Math.max(0.8 - pressCount * 0.06, minDuration); // Decrease duration by 0.06s per press, down to minDuration\n\n      shakeQueue.push({\n        newAngle,\n        newDuration\n      });\n      processShakeQueue();\n\n      // Clear any existing reset timeout\n      clearTimeout(resetTimeout);\n\n      // Set a new reset timeout for 0.5 seconds\n      resetTimeout = setTimeout(() => {\n        pressCount = 0;\n      }, 500);\n    });\n    if (window.location.pathname === '/home') {\n      // Check if the current page is not the homepage\n      const overlay = document.getElementById('overlay');\n      overlay.style.pointerEvents = 'none'; // Disable pointer events to allow clicks\n    }\n    changeVideoSource();\n    const videoElement = document.getElementById('videoElement');\n    const fallbackImage = document.getElementById('imageElement');\n    videoElement.style.opacity = '1';\n    // Function to handle video playback and related tasks\n    function handleVideoPlayback() {\n      // Create a flag to indicate whether the video is loaded successfully\n      let videoLoaded = false;\n\n      // Create a timeout to handle the scenario where loadeddata is not fired within 4 seconds\n      const loadTimeout = setTimeout(() => {\n        if (!videoLoaded) {\n          handleVideoError(new Error('Timeout waiting for video to load'));\n        }\n      }, 3000); // 3 seconds\n\n      // Function to handle video errors\n      function handleVideoError(error) {\n        console.error('Error:', error);\n        canPlayVideo = false;\n        videoElement.style.display = 'none';\n        fallbackImage.style.display = 'block';\n        fallbackImage.style.opacity = '1';\n        const checkDimensions = setInterval(function () {\n          if (imageElement.naturalWidth > 0 && imageElement.naturalHeight > 0) {\n            const aspectRatio = imageElement.naturalWidth / imageElement.naturalHeight;\n            // Check if the aspect ratio is approximately 9:16\n            if (Math.abs(aspectRatio - 9 / 16) < 0.01) {\n              clearInterval(checkDimensions);\n              updateTitles();\n              setTimeout(() => {\n                displayWelcomeContent();\n              }, 1000);\n            }\n          }\n        }, 100); // Check every 100ms until dimensions are available\n      }\n\n      // Listen for the loadeddata event to ensure the video is ready\n      videoElement.addEventListener('loadeddata', () => {\n        videoLoaded = true;\n        clearTimeout(loadTimeout); // Clear the timeout since the video is loaded\n\n        // Attempt to play the video\n        videoElement.play().then(() => {\n          const checkDimensions = setInterval(function () {\n            if (videoElement.videoWidth > 0 && videoElement.videoHeight > 0) {\n              const aspectRatio = videoElement.videoWidth / videoElement.videoHeight;\n              // Check if the aspect ratio is approximately 9:16\n              if (Math.abs(aspectRatio - 9 / 16) < 0.01) {\n                clearInterval(checkDimensions);\n\n                // createHint();\n                setupDescriptionOverlay();\n                updateTitles();\n                videoElement.addEventListener('click', () => {\n                  if (videoElement.muted) {\n                    videoElement.muted = false;\n                    videoElement.style.filter = 'grayscale(0%)';\n                    // Update the description content\n                    const descriptionContentElement = document.getElementById('descriptionContent');\n                    descriptionContentElement.innerHTML = `${currentVideoSource.description}<br><p>Click to silence and fade!</p>`;\n                  } else {\n                    videoElement.muted = true;\n                    videoElement.style.filter = 'grayscale(85%)';\n                    // Update the description content\n                    const descriptionContentElement = document.getElementById('descriptionContent');\n                    descriptionContentElement.innerHTML = `${currentVideoSource.description}<br><p>Click for color and sound!</p>`;\n                  }\n                });\n                preloadVideos();\n                videoTransition();\n                setTimeout(() => {\n                  displayWelcomeContent();\n                }, 1000);\n              }\n            }\n          }, 100); // Check every 100ms until dimensions are available\n        }).catch(error => {\n          // Handle errors that occur during video playback\n          handleVideoError(error);\n        });\n      }, {\n        once: true\n      });\n\n      // Initial video load attempt\n      try {\n        videoElement.load();\n      } catch (error) {\n        handleVideoError(error);\n      }\n    }\n\n    // Call the function to handle video playback\n    handleVideoPlayback();\n    window.onresize = () => {\n      // Clear any existing timeout to interrupt the previous typing effect\n      if (currentTimeoutId) {\n        clearTimeout(currentTimeoutId);\n      }\n      console.log(\"resize\");\n      updateTitles();\n      const isDarkMode = document.body.classList.contains('dark-mode');\n      const subtitleElement = document.getElementById('welcomeSubtitle');\n      const textColor = isDarkMode ? '#fafafa' : '#252525'; // Change text color based on theme\n      subtitleElement.style.transition = 'color 0s';\n      subtitleElement.style.color = textColor;\n      subtitleElement.style.transition = '';\n      subtitleElement.style.textAlign = 'justify';\n      subtitleElement.style.textAlignLast = 'justify';\n      subtitleElement.style.MozTextAlignLast = 'justify';\n      document.querySelectorAll('header *').forEach(element => {\n        element.style.transition = 'color 2s';\n        element.style.color = ''; // Reset to original color\n      });\n      document.querySelectorAll('footer *').forEach(element => {\n        element.style.transition = 'color 2s';\n        element.style.color = ''; // Reset to original color\n      });\n      const quoteElement = document.getElementById('welcomeQuote');\n      quoteElement.style.transition = 'color 2s';\n      quoteElement.style.color = ''; // Reset to original color\n\n      const overlay = document.getElementById('overlay');\n      overlay.style.pointerEvents = 'none'; // Disable pointer events to allow clicks\n    };\n  }\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', onDOMContentLoaded);\n  } else {\n    // The DOMContentLoaded event has already fired\n    onDOMContentLoaded();\n  }\n}","map":{"version":3,"names":["initScript","onDOMContentLoaded","console","log","document","querySelectorAll","forEach","element","style","transition","color","shakeQueue","isShaking","pressCount","pressed","resetTimeout","maxAngle","minDuration","canPlayVideo","currentTimeoutId","videoSources","src","class","description","nonPlayed","currentVideoSource","isMobilePhone","userAgent","navigator","vendor","window","opera","test","isTouchScreen","changeVideoSource","newIndex","Math","floor","random","length","source","splice","videoElement","getElementById","currentSourceElement","querySelector","setAttribute","load","descriptionContentElement","innerHTML","preloadVideos","videoData","video","createElement","preload","autoplay","loop","muted","display","body","appendChild","updateSubtitle","subtitleElement","isMobile","matchMedia","matches","textContent","getTextWidth","text","font","canvas","context","getContext","metrics","measureText","width","getCssStyle","prop","getComputedStyle","getPropertyValue","getCanvasFont","el","fontWeight","fontSize","fontFamily","adjustTitle","imageElement","titleElement","compassIcon","mediaElement","mediaHeight","clientHeight","availableWidth","clientWidth","titleFontSize","iconScaleFactor","textWidth","replace","adjustSubtitle","subtitleFontSize","totalHeight","subtitleLineHeight","lineHeight","updateTitles","isSmallScreen","typeWriterEffect","delay","callback","clearTimeout","index","spans","i","span","className","push","reveal","isDarkMode","classList","contains","textColor","setTimeout","videoTransition","fadeOutApplied","transitionOverlay","addEventListener","timeLeft","duration","currentTime","opacity","processShakeQueue","newAngle","newDuration","shift","setProperty","add","remove","switchVideoSource","descriptionOverlay","currentSource","getAttribute","newVideoSource","pause","play","once","createHint","hintParagraph","id","float","headerElement","insertBefore","children","compassFlash","toggleTipColor","hintFlash","setInterval","clearInterval","displayWelcomeContent","subtitleText","textAlign","textAlignLast","MozTextAlignLast","quoteElement","overlay","pointerEvents","setupDescriptionOverlay","min","max","location","pathname","fallbackImage","handleVideoPlayback","videoLoaded","loadTimeout","handleVideoError","Error","error","checkDimensions","naturalWidth","naturalHeight","aspectRatio","abs","then","videoWidth","videoHeight","filter","catch","onresize","readyState"],"sources":["/Users/henry/Desktop/personalpage/src/assets/js/home.js"],"sourcesContent":["/* eslint-disable */\nexport function initScript() {\n    function onDOMContentLoaded() {\n        console.log('DOM fully loaded and parsed');\n        // Your script logic here\n        document.querySelectorAll('header *').forEach(element => {\n            element.style.transition = 'color 2s';\n            element.style.color = ''; // Reset to original color\n        });\n        let shakeQueue = [];\n        let isShaking = false;\n        let pressCount = 0;\n        let pressed = false;\n        let resetTimeout;\n        const maxAngle = 360; // Maximum angle to prevent excessive shaking\n        const minDuration = 0.2; // Minimum duration to prevent excessive speed\n    \n        let canPlayVideo = true;\n    \n        let currentTimeoutId; // Variable to store the current timeout ID\n    \n        const videoSources = [\n            { src: \"/assets/vid/home1.mp4\", class: \"homevideo1\", description: \"Sunbathing, beers, and ocean breezes on the Mediterranean!\" },\n            { src: \"/assets/vid/home2.mp4\", class: \"homevideo2\", description: \"Ducks enjoying a swim by the oceanside, weaving between the boats.\" },\n            { src: \"/assets/vid/home3.mp4\", class: \"homevideo3\", description: \"A cat strolling on the ancient stone steps, shot in Athens.\" }\n        ];\n    \n        let nonPlayed = [...videoSources];\n    \n        let currentVideoSource = videoSources[0];\n    \n        function isMobilePhone() {\n            const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n            return /android|iPhone|iPod/i.test(userAgent);\n        }\n    \n        function isTouchScreen(){\n            const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n            return /android|iPhone|iPad|iPod/i.test(userAgent);\n        }\n    \n        function changeVideoSource() {\n            // Get a new random index from nonPlayed\n            const newIndex = Math.floor(Math.random() * nonPlayed.length);\n    \n            // Select the new video source using the new index\n            const source = nonPlayed.splice(newIndex, 1)[0]; // Remove the selected video from nonPlayed\n            currentVideoSource = source;\n    \n            const videoElement = document.getElementById('videoElement');\n            const currentSourceElement = videoElement.querySelector('source');\n            currentSourceElement.setAttribute('src', source.src)\n            videoElement.setAttribute('class', source.class);\n            videoElement.load();\n    \n            // Update the description content\n            const descriptionContentElement = document.getElementById('descriptionContent');\n            descriptionContentElement.innerHTML = `${source.description}<br><p>Click for color and sound!</p>`;\n        }\n    \n        function preloadVideos() {\n            videoSources.forEach(videoData => {\n                const video = document.createElement('video');\n                video.src = videoData.src;\n                video.preload = 'auto';\n                video.autoplay = true;\n                video.loop = true;\n                video.muted = true;\n                video.style.display = 'none'; // Hide the video element\n                document.body.appendChild(video);\n            });\n        }\n    \n        function updateSubtitle() {\n            const subtitleElement = document.getElementById('welcomeSubtitle');\n            const isMobile = window.matchMedia(\"(max-width: 768px)\").matches;\n    \n            if (isMobile) {\n                subtitleElement.textContent = \"Hello! I'm Han-yu, a junior at HKU, majoring in AI. I love to explore new places and code apps. I'm ready to share my journey with you!\";\n            } else {\n                subtitleElement.textContent = \"Hello! I'm Han-yu (Henry), a junior at HKU, majoring in Applied AI. I love to explore new places and code apps. I'm excited to have you here and share my journey with you!\";\n            }\n        }\n    \n        function getTextWidth(text, font) {\n            const canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement(\"canvas\"));\n            const context = canvas.getContext(\"2d\");\n            context.font = font;\n            const metrics = context.measureText(text);\n            return metrics.width;\n        }\n    \n        function getCssStyle(element, prop) {\n            return window.getComputedStyle(element, null).getPropertyValue(prop);\n        }\n    \n        function getCanvasFont(el) {\n            const fontWeight = getCssStyle(el, 'font-weight') || 'normal';\n            const fontSize = getCssStyle(el, 'font-size') || '16px';\n            const fontFamily = getCssStyle(el, 'font-family') || 'Times New Roman';\n            return `${fontWeight} ${fontSize} ${fontFamily}`;\n        }\n    \n        function adjustTitle() {\n            const videoElement = document.getElementById('videoElement');\n            const imageElement = document.getElementById('imageElement');\n            const titleElement = document.getElementById('welcomeTitle');\n            const subtitleElement = document.getElementById('welcomeSubtitle');\n            const compassIcon = document.getElementById('compassIcon');\n    \n            const mediaElement = videoElement.style.display !== 'none' ? videoElement : imageElement;\n            const mediaHeight = mediaElement.clientHeight;\n            const availableWidth = document.querySelector('.welcome-text').clientWidth;\n    \n            // Adjust the font size and line height of the title to fit the width\n            let titleFontSize = 1; // Start with a smaller font size\n            titleElement.style.fontSize = `${titleFontSize}em`;\n            \n            let iconScaleFactor = 0.3; // Scale factor to adjust the icon size relative to the text\n            compassIcon.style.fontSize = `${titleFontSize * iconScaleFactor}em`;\n            \n            let textWidth = getTextWidth(titleElement.textContent.replace('O', ''), getCanvasFont(titleElement)) + compassIcon.clientWidth;\n            while (textWidth < availableWidth && titleFontSize < 5) { // Constrain max font size to 5em\n                titleFontSize += 0.1;\n                titleElement.style.fontSize = `${titleFontSize}em`;\n                compassIcon.style.fontSize = `${titleFontSize * iconScaleFactor}em`;\n                textWidth = getTextWidth(titleElement.textContent.replace('O', ''), getCanvasFont(titleElement)) + compassIcon.clientWidth;\n            }\n    \n            while (textWidth > availableWidth && titleFontSize > 0.5) { // Constrain min font size to 0.5em\n                titleFontSize -= 0.1;\n                titleElement.style.fontSize = `${titleFontSize}em`;\n                compassIcon.style.fontSize = `${titleFontSize * iconScaleFactor}em`;\n                textWidth = getTextWidth(titleElement.textContent.replace('O', ''), getCanvasFont(titleElement)) + compassIcon.clientWidth;\n            }\n        }\n    \n        function adjustSubtitle() {\n            const videoElement = document.getElementById('videoElement');\n            const imageElement = document.getElementById('imageElement');\n            const titleElement = document.getElementById('welcomeTitle');\n            const subtitleElement = document.getElementById('welcomeSubtitle');\n            const compassIcon = document.getElementById('compassIcon');\n    \n            const mediaElement = videoElement.style.display !== 'none' ? videoElement : imageElement;\n            const mediaHeight = mediaElement.clientHeight;\n            const availableWidth = document.querySelector('.welcome-text').clientWidth;\n    \n            // Fix the title font size and adjust the subtitle to match the height of the video\n            let subtitleFontSize = 1;\n            subtitleElement.style.fontSize = `${subtitleFontSize}em`;\n            let totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n    \n            while (totalHeight < mediaHeight && subtitleFontSize < 3) { // Constrain max font size to 3em\n                subtitleFontSize += 0.01;\n                subtitleElement.style.fontSize = `${subtitleFontSize}em`;\n                totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n            }\n    \n            // Reduce font size and line height if the total height exceeds the video height\n            while (totalHeight > mediaHeight && subtitleFontSize > 0.5) { // Ensure font size does not go below 0.5em\n                subtitleFontSize -= 0.01;\n                subtitleElement.style.fontSize = `${subtitleFontSize}em`;\n                totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n            }\n    \n            // Adjust the line height of the subtitle element to fit within the media height\n            let subtitleLineHeight = 1.4; // Starting line height\n            subtitleElement.style.lineHeight = subtitleLineHeight;\n            totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n    \n            while (totalHeight < mediaHeight && subtitleLineHeight < 2) { // Constrain max line height to 2\n                subtitleLineHeight += 0.1;\n                subtitleElement.style.lineHeight = subtitleLineHeight;\n                totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n            }\n    \n            while (totalHeight > mediaHeight && subtitleLineHeight > 1) { // Ensure line height does not go below 1\n                subtitleLineHeight -= 0.1;\n                subtitleElement.style.lineHeight = subtitleLineHeight;\n                totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n            }\n        }\n    \n        function updateTitles() {\n            updateSubtitle();\n            adjustTitle();\n            const isSmallScreen = window.matchMedia(\"(max-width: 600px)\").matches;\n            if (isSmallScreen) {\n                document.getElementById('welcomeTitle').style.fontSize = '2em';\n                document.getElementById('compassIcon').style.fontSize = '1.1em';\n            }\n            adjustSubtitle();\n        }\n    \n        function typeWriterEffect(text, element, delay = 100, callback) {\n            // Clear any existing timeout to interrupt the previous typing effect\n            if (currentTimeoutId) {\n                clearTimeout(currentTimeoutId);\n            }\n    \n            element.innerHTML = '';\n            let index = 0;\n            const spans = [];\n    \n            // Step 1: Create a span for each character\n            for (let i = 0; i < text.length; i++) {\n                const span = document.createElement('span');\n                span.className = 'typed';\n                span.style.color = 'transparent'; // Initially transparent\n                span.textContent = text[i];\n                element.appendChild(span);\n                spans.push(span);\n            }\n    \n            // Step 2: Turn each span into the text color one by one\n            function reveal() {\n                if (index < spans.length) {\n                    const isDarkMode = document.body.classList.contains('dark-mode');\n                    const textColor = isDarkMode ? '#fafafa' : '#252525'; // Change text color based on theme\n                    \n                    spans[index].style.transition = `color 2s`;\n                    spans[index].style.color = textColor;\n                    index++;\n                    currentTimeoutId = setTimeout(reveal, delay); // Store the timeout ID\n                } else {\n                    if (callback) callback();\n                }\n            }\n    \n            reveal();\n        }\n    \n        function videoTransition() {\n            let fadeOutApplied = false;\n            const transitionOverlay = document.getElementById('transitionOverlay');\n            transitionOverlay.style.transition = 'opacity 0.3s ease-in-out';\n    \n            videoElement.addEventListener('timeupdate', () => {\n                const timeLeft = videoElement.duration - videoElement.currentTime;\n                if (timeLeft < 0.6 && !fadeOutApplied) { // Adjust the time threshold as needed\n                    transitionOverlay.style.opacity = '1';\n                    fadeOutApplied = true;\n                }\n            });\n    \n            videoElement.addEventListener('timeupdate', () => {\n                if (videoElement.currentTime >0.2 && videoElement.currentTime <1.2 ) {\n                    transitionOverlay.style.opacity = '0';\n                    fadeOutApplied = false; // Reset the flag when the video starts playing again\n                }\n            });\n    \n            // videoElement.addEventListener('playing', () => {\n            //     transitionOverlay.style.opacity = '0';\n            //     fadeOutApplied = false; // Reset the flag when the video starts playing again\n            // });\n        }\n    \n        function processShakeQueue() {\n            if (shakeQueue.length === 0 || isShaking) return;\n            \n            isShaking = true;\n            const { newAngle, newDuration } = shakeQueue.shift();\n            \n            const compassIcon = document.getElementById('compassIcon');\n            compassIcon.style.setProperty('--shake-angle', `${newAngle}deg`);\n            compassIcon.style.setProperty('--shake-duration', `${newDuration}s`);\n            \n            compassIcon.classList.add('shake');\n            \n            setTimeout(() => {\n                compassIcon.classList.remove('shake');\n                isShaking = false;\n                processShakeQueue(); // Process the next shake in the queue\n            }, newDuration * 1000);\n        }\n    \n        function switchVideoSource() {\n            const videoElement = document.getElementById('videoElement');\n            const transitionOverlay = document.getElementById('transitionOverlay');\n            const descriptionOverlay = document.getElementById('descriptionOverlay');\n            const currentSourceElement = videoElement.querySelector('source');\n            const currentSource = currentSourceElement.getAttribute('src');\n    \n            // If nonPlayed is empty, refill it with a copy of videoSources\n            if (nonPlayed.length === 0) {\n                nonPlayed = [...videoSources];\n            }\n    \n            // Get a new random index from nonPlayed\n            const newIndex = Math.floor(Math.random() * nonPlayed.length);\n    \n            // Select the new video source using the new index\n            const newVideoSource = nonPlayed.splice(newIndex, 1)[0]; // Remove the selected video from nonPlayed\n            currentVideoSource = newVideoSource;\n    \n            // Apply flip effect\n            if (!isMobilePhone()) {\n                descriptionOverlay.style.opacity = 0.5;\n            }\n            videoElement.classList.remove('flip2');\n            videoElement.classList.add('flip');\n            transitionOverlay.classList.remove('flip2');\n            transitionOverlay.classList.add('flip');\n            descriptionOverlay.classList.remove('flip2');\n            descriptionOverlay.classList.add('flip');\n    \n            // Listen for the midpoint of the flip to change the source\n            videoElement.addEventListener('animationend', () => {\n                // Change the source and load the new video\n                videoElement.pause(); // Pause the video before changing the source\n                videoElement.querySelector('source').src = newVideoSource.src;\n                videoElement.load(); // Load the new video source\n    \n                // Restart the flip animation for the second half of the transition\n                videoElement.classList.remove('flip');\n                transitionOverlay.classList.remove('flip');\n                descriptionOverlay.classList.remove('flip');\n    \n                // Play the new video source\n                videoElement.play();\n    \n                if (!videoElement.muted) {\n                    const descriptionContentElement = document.getElementById('descriptionContent');\n                    descriptionContentElement.innerHTML = `${currentVideoSource.description}<br><p>Click to silence and fade!</p>`;\n                } else {\n                    const descriptionContentElement = document.getElementById('descriptionContent');\n                    descriptionContentElement.innerHTML = `${currentVideoSource.description}<br><p>Click for color and sound!</p>`;\n                }\n    \n                // Add the flip class back to complete the flip animation\n                videoElement.classList.add('flip2');\n                transitionOverlay.classList.add('flip2');\n                descriptionOverlay.classList.add('flip2');\n    \n                // Ensure the flip class is removed after the animation completes\n                videoElement.addEventListener('animationend', () => {\n                    videoElement.classList.remove('flip2');\n                    transitionOverlay.classList.remove('flip2');\n                    descriptionOverlay.classList.remove('flip2');\n                    videoElement.setAttribute('class', newVideoSource.class);\n                    descriptionOverlay.style.opacity = '';\n                }, { once: true });\n            }, { once: true });\n        }\n    \n        function createHint() {\n            // Create a new <small> element\n            var hintParagraph = document.createElement(\"small\");\n    \n            // Set the class and style of the new <p> element\n            hintParagraph.id = \"hint\";\n            hintParagraph.className = \"tipcolor-2\";\n            hintParagraph.style.float = \"right\";\n    \n            // Set the text content of the new element\n            hintParagraph.textContent = 'Click the compass!';\n    \n            // Find the element with the class \"header\"\n            var headerElement = document.querySelector(\".header-title\");\n    \n            // Append the new <p> element to the header element\n            if (headerElement) {\n                headerElement.insertBefore(hintParagraph, headerElement.children[2] || null);\n            }\n        }\n    \n        function compassFlash() {\n            // const hintParagraph = document.getElementById('hint');\n            // hintParagraph.classList.remove(\"tipcolor-2\");\n            // hintParagraph.classList.add(\"tipcolor-1\");\n    \n            const compassIcon = document.getElementById('compassIcon');\n            compassIcon.style.transition = 'color 1.5s'\n    \n            // Function to toggle between the classes\n            function toggleTipColor() {\n                compassIcon.classList.add(\"tipcolor-1\");\n                setTimeout(function() {\n                    compassIcon.classList.remove(\"tipcolor-1\");\n                }, 800);\n            }\n    \n            // Set an interval to toggle the classes every 4000ms if pressed is false\n            const hintFlash = setInterval(function() {\n                if (!pressed) {\n                    toggleTipColor();\n                } else {\n                    clearInterval(hintFlash); // Clear the interval\n                }\n            }, 2400);\n        }\n    \n        function displayWelcomeContent() {\n            const titleElement = document.getElementById('welcomeTitle');\n            titleElement.style.transition = 'color 2s';\n            titleElement.style.color = ''; // Reset to original color\n            const subtitleText = document.getElementById('welcomeSubtitle').textContent;\n            const subtitleElement = document.getElementById('welcomeSubtitle');\n            subtitleElement.style.textAlign = 'justify'; // Change to justify after typing is complete\n            subtitleElement.style.textAlignLast = 'justify'; // Change to justify after typing is complete\n            subtitleElement.style.MozTextAlignLast = 'justify'; // Change to justify after typing is complete\n    \n            typeWriterEffect(subtitleText, subtitleElement, 10, () => {\n                setTimeout(() => {\n                    document.querySelectorAll('header *').forEach(element => {\n                        element.style.transition = 'color 2s';\n                        element.style.color = ''; // Reset to original color\n                    });\n                    document.querySelectorAll('footer *').forEach(element => {\n                        element.style.transition = 'color 2s';\n                        element.style.color = ''; // Reset to original color\n                    });\n                    const quoteElement = document.getElementById('welcomeQuote');\n                    quoteElement.style.transition = 'color 2s';\n                    quoteElement.style.color = ''; // Reset to original color\n    \n                    const overlay = document.getElementById('overlay');\n                    overlay.style.pointerEvents = 'none'; // Disable pointer events to allow clicks\n    \n                    setTimeout(() => {\n                        compassFlash();\n    \n                        // Reset the transition property after the color transition is complete\n                        setTimeout(() => {\n                            document.querySelectorAll('header *').forEach(element => {\n                                element.style.transition = 'color 0.5s';\n                            });\n                            document.querySelectorAll('footer *').forEach(element => {\n                                element.style.transition = 'color 0.5s';\n                            });\n                        }, 2000); // Match this duration with the color transition time (2 seconds)\n                    }, 1000);\n                }, 1000);\n            });\n        }\n    \n        function setupDescriptionOverlay() {\n            const videoElement = document.getElementById('videoElement');\n            const descriptionOverlay = document.querySelector('.description-overlay');\n    \n            if (!isTouchScreen()) {\n                videoElement.addEventListener('mouseenter', () => {\n                    descriptionOverlay.style.opacity = '0.5';\n                });\n    \n                videoElement.addEventListener('mouseleave', () => {\n                    descriptionOverlay.style.opacity = '0';\n                });\n            }\n        }\n    \n        document.getElementById('compassIcon').addEventListener('click', function() {\n    \n            if (canPlayVideo) {\n                switchVideoSource();\n            }\n    \n            pressed = true;\n            const compassIcon = document.getElementById('compassIcon');\n            // const hintParagraph = document.getElementById('hint');\n            compassIcon.classList.remove(\"tipcolor-1\");\n            compassIcon.classList.remove(\"tipcolor-2\");\n            // try{\n            //     hintParagraph.classList.add(\"tipcolor-2\");\n            // } catch (error) {\n            //     console.error(error);\n            // } \n    \n            pressCount++;\n            \n            // Calculate new angle and duration based on the number of presses\n            let newAngle = Math.min(15 + pressCount * 6, maxAngle); // Increase angle by 6 degrees per press, up to maxAngle\n            let newDuration = Math.max(0.8 - pressCount * 0.06, minDuration); // Decrease duration by 0.06s per press, down to minDuration\n            \n            shakeQueue.push({ newAngle, newDuration });\n            processShakeQueue();\n            \n            // Clear any existing reset timeout\n            clearTimeout(resetTimeout);\n            \n            // Set a new reset timeout for 0.5 seconds\n            resetTimeout = setTimeout(() => {\n                pressCount = 0;\n            }, 500);\n        });\n    \n        if (window.location.pathname === '/home') { // Check if the current page is not the homepage\n            const overlay = document.getElementById('overlay');\n            overlay.style.pointerEvents = 'none'; // Disable pointer events to allow clicks\n        }\n    \n        changeVideoSource();\n    \n        const videoElement = document.getElementById('videoElement');\n        const fallbackImage = document.getElementById('imageElement');\n        videoElement.style.opacity = '1';\n        // Function to handle video playback and related tasks\n        function handleVideoPlayback() {\n            // Create a flag to indicate whether the video is loaded successfully\n            let videoLoaded = false;\n    \n            // Create a timeout to handle the scenario where loadeddata is not fired within 4 seconds\n            const loadTimeout = setTimeout(() => {\n                if (!videoLoaded) {\n                    handleVideoError(new Error('Timeout waiting for video to load'));\n                }\n            }, 3000); // 3 seconds\n    \n            // Function to handle video errors\n            function handleVideoError(error) {\n                console.error('Error:', error);\n                canPlayVideo = false;\n                videoElement.style.display = 'none';\n                fallbackImage.style.display = 'block';\n                fallbackImage.style.opacity = '1';\n                const checkDimensions = setInterval(function() {\n                    if (imageElement.naturalWidth > 0 && imageElement.naturalHeight > 0) {\n                        const aspectRatio = imageElement.naturalWidth / imageElement.naturalHeight;\n                        // Check if the aspect ratio is approximately 9:16\n                        if (Math.abs(aspectRatio - (9 / 16)) < 0.01) {\n                            clearInterval(checkDimensions);\n    \n                            updateTitles();\n    \n                            setTimeout(() => {\n                                displayWelcomeContent();\n                            }, 1000);\n                        }\n                    }\n                }, 100); // Check every 100ms until dimensions are available\n            }\n    \n            // Listen for the loadeddata event to ensure the video is ready\n            videoElement.addEventListener('loadeddata', () => {\n                videoLoaded = true;\n                clearTimeout(loadTimeout); // Clear the timeout since the video is loaded\n    \n                // Attempt to play the video\n                videoElement.play().then(() => {\n                    const checkDimensions = setInterval(function() {\n                        if (videoElement.videoWidth > 0 && videoElement.videoHeight > 0) {\n                            const aspectRatio = videoElement.videoWidth / videoElement.videoHeight;\n                            // Check if the aspect ratio is approximately 9:16\n                            if (Math.abs(aspectRatio - (9 / 16)) < 0.01) {\n                                clearInterval(checkDimensions);\n    \n                                // createHint();\n                                setupDescriptionOverlay();\n                                updateTitles();\n    \n                                videoElement.addEventListener('click', () => {\n                                    if (videoElement.muted) {\n                                        videoElement.muted = false;\n                                        videoElement.style.filter = 'grayscale(0%)';\n                                        // Update the description content\n                                        const descriptionContentElement = document.getElementById('descriptionContent');\n                                        descriptionContentElement.innerHTML = `${currentVideoSource.description}<br><p>Click to silence and fade!</p>`;\n                                    } else {\n                                        videoElement.muted = true;\n                                        videoElement.style.filter = 'grayscale(85%)';\n                                        // Update the description content\n                                        const descriptionContentElement = document.getElementById('descriptionContent');\n                                        descriptionContentElement.innerHTML = `${currentVideoSource.description}<br><p>Click for color and sound!</p>`;\n                                    }\n                                });\n    \n                                preloadVideos();\n                                videoTransition();\n    \n                                setTimeout(() => {\n                                    displayWelcomeContent();\n                                }, 1000);\n                            }\n                        }\n                    }, 100); // Check every 100ms until dimensions are available\n                }).catch((error) => {\n                    // Handle errors that occur during video playback\n                    handleVideoError(error);\n                });\n            }, { once: true });\n    \n            // Initial video load attempt\n            try {\n                videoElement.load();\n            } catch (error) {\n                handleVideoError(error);\n            }\n        }\n    \n        // Call the function to handle video playback\n        handleVideoPlayback();\n    \n        window.onresize = () => {\n            // Clear any existing timeout to interrupt the previous typing effect\n            if (currentTimeoutId) {\n                clearTimeout(currentTimeoutId);\n            }\n            console.log(\"resize\")\n            updateTitles();\n            const isDarkMode = document.body.classList.contains('dark-mode');\n            const subtitleElement = document.getElementById('welcomeSubtitle');\n            const textColor = isDarkMode ? '#fafafa' : '#252525'; // Change text color based on theme\n            subtitleElement.style.transition = 'color 0s';\n            subtitleElement.style.color = textColor;\n            subtitleElement.style.transition = '';\n            subtitleElement.style.textAlign = 'justify';\n            subtitleElement.style.textAlignLast = 'justify';\n            subtitleElement.style.MozTextAlignLast = 'justify';\n            document.querySelectorAll('header *').forEach(element => {\n                element.style.transition = 'color 2s';\n                element.style.color = ''; // Reset to original color\n            });\n            document.querySelectorAll('footer *').forEach(element => {\n                element.style.transition = 'color 2s';\n                element.style.color = ''; // Reset to original color\n            });\n            const quoteElement = document.getElementById('welcomeQuote');\n            quoteElement.style.transition = 'color 2s';\n            quoteElement.style.color = ''; // Reset to original color\n        \n            const overlay = document.getElementById('overlay');\n            overlay.style.pointerEvents = 'none'; // Disable pointer events to allow clicks\n        };\n    }\n\n    if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', onDOMContentLoaded);\n    } else {\n        // The DOMContentLoaded event has already fired\n        onDOMContentLoaded();\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}