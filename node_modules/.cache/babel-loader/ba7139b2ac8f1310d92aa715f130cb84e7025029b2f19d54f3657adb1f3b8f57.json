{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'IndexPage'\n};\ndocument.title = \"Home | H.W.\";\nlet shakeQueue = [];\nlet isShaking = false;\nlet pressCount = 0;\nlet pressed = false;\nlet resetTimeout;\nconst maxAngle = 360; // Maximum angle to prevent excessive shaking\nconst minDuration = 0.2; // Minimum duration to prevent excessive speed\n\nlet canPlayVideo = true;\nlet currentTimeoutId; // Variable to store the current timeout ID\n\nconst videoSources = [{\n  src: \"/assets/vid/home1.mp4\",\n  class: \"homevideo1\",\n  description: \"Sunbathing, beers, and ocean breezes on the Mediterranean!\"\n}, {\n  src: \"/assets/vid/home2.mp4\",\n  class: \"homevideo2\",\n  description: \"Ducks enjoying a swim by the oceanside, weaving between the boats.\"\n}, {\n  src: \"/assets/vid/home3.mp4\",\n  class: \"homevideo3\",\n  description: \"A cat strolling on the ancient stone steps, shot in Athens.\"\n}];\nlet nonPlayed = [...videoSources];\nlet currentVideoSource = videoSources[0];\nfunction isMobilePhone() {\n  const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n  return /android|iPhone|iPod/i.test(userAgent);\n}\nfunction isTouchScreen() {\n  const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n  return /android|iPhone|iPad|iPod/i.test(userAgent);\n}\nfunction changeVideoSource() {\n  // Get a new random index from nonPlayed\n  const newIndex = Math.floor(Math.random() * nonPlayed.length);\n\n  // Select the new video source using the new index\n  const source = nonPlayed.splice(newIndex, 1)[0]; // Remove the selected video from nonPlayed\n  currentVideoSource = source;\n  const videoElement = document.getElementById('videoElement');\n  const currentSourceElement = videoElement.querySelector('source');\n  currentSourceElement.setAttribute('src', source.src);\n  videoElement.setAttribute('class', source.class);\n  videoElement.load();\n\n  // Update the description content\n  const descriptionContentElement = document.getElementById('descriptionContent');\n  descriptionContentElement.innerHTML = `${source.description}<br><p>Click for color and sound!</p>`;\n}\nfunction preloadVideos() {\n  videoSources.forEach(videoData => {\n    const video = document.createElement('video');\n    video.src = videoData.src;\n    video.preload = 'auto';\n    video.autoplay = true;\n    video.loop = true;\n    video.muted = true;\n    video.style.display = 'none'; // Hide the video element\n    document.body.appendChild(video);\n  });\n}\nfunction updateSubtitle() {\n  const subtitleElement = document.getElementById('welcomeSubtitle');\n  const isMobile = window.matchMedia(\"(max-width: 768px)\").matches;\n  if (isMobile) {\n    subtitleElement.textContent = \"Hello! I'm Han-yu, a junior at HKU, majoring in AI. I love to explore new places and code apps. I'm ready to share my journey with you!\";\n  } else {\n    subtitleElement.textContent = \"Hello! I'm Han-yu (Henry), a junior at HKU, majoring in Applied AI. I love to explore new places and code apps. I'm excited to have you here and share my journey with you!\";\n  }\n}\nfunction getTextWidth(text, font) {\n  const canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement(\"canvas\"));\n  const context = canvas.getContext(\"2d\");\n  context.font = font;\n  const metrics = context.measureText(text);\n  return metrics.width;\n}\nfunction getCssStyle(element, prop) {\n  return window.getComputedStyle(element, null).getPropertyValue(prop);\n}\nfunction getCanvasFont(el) {\n  const fontWeight = getCssStyle(el, 'font-weight') || 'normal';\n  const fontSize = getCssStyle(el, 'font-size') || '16px';\n  const fontFamily = getCssStyle(el, 'font-family') || 'Times New Roman';\n  return `${fontWeight} ${fontSize} ${fontFamily}`;\n}\nfunction adjustTitle() {\n  const videoElement = document.getElementById('videoElement');\n  const imageElement = document.getElementById('imageElement');\n  const titleElement = document.getElementById('welcomeTitle');\n  const subtitleElement = document.getElementById('welcomeSubtitle');\n  const compassIcon = document.getElementById('compassIcon');\n  const mediaElement = videoElement.style.display !== 'none' ? videoElement : imageElement;\n  const mediaHeight = mediaElement.clientHeight;\n  const availableWidth = document.querySelector('.welcome-text').clientWidth;\n\n  // Adjust the font size and line height of the title to fit the width\n  let titleFontSize = 1; // Start with a smaller font size\n  titleElement.style.fontSize = `${titleFontSize}em`;\n  let iconScaleFactor = 0.3; // Scale factor to adjust the icon size relative to the text\n  compassIcon.style.fontSize = `${titleFontSize * iconScaleFactor}em`;\n  let textWidth = getTextWidth(titleElement.textContent.replace('O', ''), getCanvasFont(titleElement)) + compassIcon.clientWidth;\n  while (textWidth < availableWidth && titleFontSize < 5) {\n    // Constrain max font size to 5em\n    titleFontSize += 0.1;\n    titleElement.style.fontSize = `${titleFontSize}em`;\n    compassIcon.style.fontSize = `${titleFontSize * iconScaleFactor}em`;\n    textWidth = getTextWidth(titleElement.textContent.replace('O', ''), getCanvasFont(titleElement)) + compassIcon.clientWidth;\n  }\n  while (textWidth > availableWidth && titleFontSize > 0.5) {\n    // Constrain min font size to 0.5em\n    titleFontSize -= 0.1;\n    titleElement.style.fontSize = `${titleFontSize}em`;\n    compassIcon.style.fontSize = `${titleFontSize * iconScaleFactor}em`;\n    textWidth = getTextWidth(titleElement.textContent.replace('O', ''), getCanvasFont(titleElement)) + compassIcon.clientWidth;\n  }\n}\nfunction adjustSubtitle() {\n  const videoElement = document.getElementById('videoElement');\n  const imageElement = document.getElementById('imageElement');\n  const titleElement = document.getElementById('welcomeTitle');\n  const subtitleElement = document.getElementById('welcomeSubtitle');\n  const compassIcon = document.getElementById('compassIcon');\n  const mediaElement = videoElement.style.display !== 'none' ? videoElement : imageElement;\n  const mediaHeight = mediaElement.clientHeight;\n  const availableWidth = document.querySelector('.welcome-text').clientWidth;\n\n  // Fix the title font size and adjust the subtitle to match the height of the video\n  let subtitleFontSize = 1;\n  subtitleElement.style.fontSize = `${subtitleFontSize}em`;\n  let totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n  while (totalHeight < mediaHeight && subtitleFontSize < 3) {\n    // Constrain max font size to 3em\n    subtitleFontSize += 0.01;\n    subtitleElement.style.fontSize = `${subtitleFontSize}em`;\n    totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n  }\n\n  // Reduce font size and line height if the total height exceeds the video height\n  while (totalHeight > mediaHeight && subtitleFontSize > 0.5) {\n    // Ensure font size does not go below 0.5em\n    subtitleFontSize -= 0.01;\n    subtitleElement.style.fontSize = `${subtitleFontSize}em`;\n    totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n  }\n\n  // Adjust the line height of the subtitle element to fit within the media height\n  let subtitleLineHeight = 1.4; // Starting line height\n  subtitleElement.style.lineHeight = subtitleLineHeight;\n  totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n  while (totalHeight < mediaHeight && subtitleLineHeight < 2) {\n    // Constrain max line height to 2\n    subtitleLineHeight += 0.1;\n    subtitleElement.style.lineHeight = subtitleLineHeight;\n    totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n  }\n  while (totalHeight > mediaHeight && subtitleLineHeight > 1) {\n    // Ensure line height does not go below 1\n    subtitleLineHeight -= 0.1;\n    subtitleElement.style.lineHeight = subtitleLineHeight;\n    totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n  }\n}\nfunction updateTitles() {\n  updateSubtitle();\n  adjustTitle();\n  const isSmallScreen = window.matchMedia(\"(max-width: 600px)\").matches;\n  if (isSmallScreen) {\n    document.getElementById('welcomeTitle').style.fontSize = '2em';\n    document.getElementById('compassIcon').style.fontSize = '1.1em';\n  }\n  adjustSubtitle();\n}\nfunction typeWriterEffect(text, element, delay = 100, callback) {\n  // Clear any existing timeout to interrupt the previous typing effect\n  if (currentTimeoutId) {\n    clearTimeout(currentTimeoutId);\n  }\n  element.innerHTML = '';\n  let index = 0;\n  const spans = [];\n\n  // Step 1: Create a span for each character\n  for (let i = 0; i < text.length; i++) {\n    const span = document.createElement('span');\n    span.className = 'typed';\n    span.style.color = 'transparent'; // Initially transparent\n    span.textContent = text[i];\n    element.appendChild(span);\n    spans.push(span);\n  }\n\n  // Step 2: Turn each span into the text color one by one\n  function reveal() {\n    if (index < spans.length) {\n      const isDarkMode = document.body.classList.contains('dark-mode');\n      const textColor = isDarkMode ? '#fafafa' : '#252525'; // Change text color based on theme\n\n      spans[index].style.transition = `color 2s`;\n      spans[index].style.color = textColor;\n      index++;\n      currentTimeoutId = setTimeout(reveal, delay); // Store the timeout ID\n    } else {\n      if (callback) callback();\n    }\n  }\n  reveal();\n}\nfunction videoTransition() {\n  let fadeOutApplied = false;\n  const transitionOverlay = document.getElementById('transitionOverlay');\n  transitionOverlay.style.transition = 'opacity 0.3s ease-in-out';\n  videoElement.addEventListener('timeupdate', () => {\n    const timeLeft = videoElement.duration - videoElement.currentTime;\n    if (timeLeft < 0.6 && !fadeOutApplied) {\n      // Adjust the time threshold as needed\n      transitionOverlay.style.opacity = '1';\n      fadeOutApplied = true;\n    }\n  });\n  videoElement.addEventListener('timeupdate', () => {\n    if (videoElement.currentTime > 0.2 && videoElement.currentTime < 1.2) {\n      transitionOverlay.style.opacity = '0';\n      fadeOutApplied = false; // Reset the flag when the video starts playing again\n    }\n  });\n\n  // videoElement.addEventListener('playing', () => {\n  //     transitionOverlay.style.opacity = '0';\n  //     fadeOutApplied = false; // Reset the flag when the video starts playing again\n  // });\n}\nfunction processShakeQueue() {\n  if (shakeQueue.length === 0 || isShaking) return;\n  isShaking = true;\n  const {\n    newAngle,\n    newDuration\n  } = shakeQueue.shift();\n  const compassIcon = document.getElementById('compassIcon');\n  compassIcon.style.setProperty('--shake-angle', `${newAngle}deg`);\n  compassIcon.style.setProperty('--shake-duration', `${newDuration}s`);\n  compassIcon.classList.add('shake');\n  setTimeout(() => {\n    compassIcon.classList.remove('shake');\n    isShaking = false;\n    processShakeQueue(); // Process the next shake in the queue\n  }, newDuration * 1000);\n}\nfunction switchVideoSource() {\n  const videoElement = document.getElementById('videoElement');\n  const transitionOverlay = document.getElementById('transitionOverlay');\n  const descriptionOverlay = document.getElementById('descriptionOverlay');\n  const currentSourceElement = videoElement.querySelector('source');\n  const currentSource = currentSourceElement.getAttribute('src');\n\n  // If nonPlayed is empty, refill it with a copy of videoSources\n  if (nonPlayed.length === 0) {\n    nonPlayed = [...videoSources];\n  }\n\n  // Get a new random index from nonPlayed\n  const newIndex = Math.floor(Math.random() * nonPlayed.length);\n\n  // Select the new video source using the new index\n  const newVideoSource = nonPlayed.splice(newIndex, 1)[0]; // Remove the selected video from nonPlayed\n  currentVideoSource = newVideoSource;\n\n  // Apply flip effect\n  if (!isMobilePhone()) {\n    descriptionOverlay.style.opacity = 0.5;\n  }\n  videoElement.classList.remove('flip2');\n  videoElement.classList.add('flip');\n  transitionOverlay.classList.remove('flip2');\n  transitionOverlay.classList.add('flip');\n  descriptionOverlay.classList.remove('flip2');\n  descriptionOverlay.classList.add('flip');\n\n  // Listen for the midpoint of the flip to change the source\n  videoElement.addEventListener('animationend', () => {\n    // Change the source and load the new video\n    videoElement.pause(); // Pause the video before changing the source\n    videoElement.querySelector('source').src = newVideoSource.src;\n    videoElement.load(); // Load the new video source\n\n    // Restart the flip animation for the second half of the transition\n    videoElement.classList.remove('flip');\n    transitionOverlay.classList.remove('flip');\n    descriptionOverlay.classList.remove('flip');\n\n    // Play the new video source\n    videoElement.play();\n    if (!videoElement.muted) {\n      const descriptionContentElement = document.getElementById('descriptionContent');\n      descriptionContentElement.innerHTML = `${currentVideoSource.description}<br><p>Click to silence and fade!</p>`;\n    } else {\n      const descriptionContentElement = document.getElementById('descriptionContent');\n      descriptionContentElement.innerHTML = `${currentVideoSource.description}<br><p>Click for color and sound!</p>`;\n    }\n\n    // Add the flip class back to complete the flip animation\n    videoElement.classList.add('flip2');\n    transitionOverlay.classList.add('flip2');\n    descriptionOverlay.classList.add('flip2');\n\n    // Ensure the flip class is removed after the animation completes\n    videoElement.addEventListener('animationend', () => {\n      videoElement.classList.remove('flip2');\n      transitionOverlay.classList.remove('flip2');\n      descriptionOverlay.classList.remove('flip2');\n      videoElement.setAttribute('class', newVideoSource.class);\n      descriptionOverlay.style.opacity = '';\n    }, {\n      once: true\n    });\n  }, {\n    once: true\n  });\n}\nfunction createHint() {\n  // Create a new <small> element\n  var hintParagraph = document.createElement(\"small\");\n\n  // Set the class and style of the new <p> element\n  hintParagraph.id = \"hint\";\n  hintParagraph.className = \"tipcolor-2\";\n  hintParagraph.style.float = \"right\";\n\n  // Set the text content of the new element\n  hintParagraph.textContent = 'Click the compass!';\n\n  // Find the element with the class \"header\"\n  var headerElement = document.querySelector(\".header-title\");\n\n  // Append the new <p> element to the header element\n  if (headerElement) {\n    headerElement.insertBefore(hintParagraph, headerElement.children[2] || null);\n  }\n}\nfunction compassFlash() {\n  const hintParagraph = document.getElementById('hint');\n  hintParagraph.classList.remove(\"tipcolor-2\");\n  hintParagraph.classList.add(\"tipcolor-1\");\n  const compassIcon = document.getElementById('compassIcon');\n  compassIcon.style.transition = 'color 1.5s';\n\n  // Function to toggle between the classes\n  function toggleTipColor() {\n    compassIcon.classList.add(\"tipcolor-1\");\n    setTimeout(function () {\n      compassIcon.classList.remove(\"tipcolor-1\");\n    }, 800);\n  }\n\n  // Set an interval to toggle the classes every 4000ms if pressed is false\n  const hintFlash = setInterval(function () {\n    if (!pressed) {\n      toggleTipColor();\n    } else {\n      clearInterval(hintFlash); // Clear the interval\n    }\n  }, 2400);\n}\nfunction displayWelcomeContent() {\n  const titleElement = document.getElementById('welcomeTitle');\n  titleElement.style.transition = 'color 2s';\n  titleElement.style.color = ''; // Reset to original color\n  const subtitleText = document.getElementById('welcomeSubtitle').textContent;\n  const subtitleElement = document.getElementById('welcomeSubtitle');\n  subtitleElement.style.textAlign = 'justify'; // Change to justify after typing is complete\n  subtitleElement.style.textAlignLast = 'justify'; // Change to justify after typing is complete\n  subtitleElement.style.MozTextAlignLast = 'justify'; // Change to justify after typing is complete\n\n  typeWriterEffect(subtitleText, subtitleElement, 10, () => {\n    setTimeout(() => {\n      document.querySelectorAll('header *').forEach(element => {\n        element.style.transition = 'color 2s';\n        element.style.color = ''; // Reset to original color\n      });\n      document.querySelectorAll('footer *').forEach(element => {\n        element.style.transition = 'color 2s';\n        element.style.color = ''; // Reset to original color\n      });\n      const quoteElement = document.getElementById('welcomeQuote');\n      quoteElement.style.transition = 'color 2s';\n      quoteElement.style.color = ''; // Reset to original color\n\n      const overlay = document.getElementById('overlay');\n      overlay.style.pointerEvents = 'none'; // Disable pointer events to allow clicks\n\n      setTimeout(() => {\n        compassFlash();\n\n        // Reset the transition property after the color transition is complete\n        setTimeout(() => {\n          document.querySelectorAll('header *').forEach(element => {\n            element.style.transition = 'color 0.5s';\n          });\n          document.querySelectorAll('footer *').forEach(element => {\n            element.style.transition = 'color 0.5s';\n          });\n        }, 2000); // Match this duration with the color transition time (2 seconds)\n      }, 1000);\n    }, 1000);\n  });\n}\nfunction setupDescriptionOverlay() {\n  const videoElement = document.getElementById('videoElement');\n  const descriptionOverlay = document.querySelector('.description-overlay');\n  if (!isTouchScreen()) {\n    videoElement.addEventListener('mouseenter', () => {\n      descriptionOverlay.style.opacity = '0.5';\n    });\n    videoElement.addEventListener('mouseleave', () => {\n      descriptionOverlay.style.opacity = '0';\n    });\n  }\n}\ndocument.getElementById('compassIcon').addEventListener('click', function () {\n  if (canPlayVideo) {\n    switchVideoSource();\n  }\n  pressed = true;\n  const compassIcon = document.getElementById('compassIcon');\n  const hintParagraph = document.getElementById('hint');\n  compassIcon.classList.remove(\"tipcolor-1\");\n  compassIcon.classList.remove(\"tipcolor-2\");\n  try {\n    hintParagraph.classList.add(\"tipcolor-2\");\n  } catch (error) {\n    console.error(error);\n  }\n  pressCount++;\n\n  // Calculate new angle and duration based on the number of presses\n  let newAngle = Math.min(15 + pressCount * 6, maxAngle); // Increase angle by 6 degrees per press, up to maxAngle\n  let newDuration = Math.max(0.8 - pressCount * 0.06, minDuration); // Decrease duration by 0.06s per press, down to minDuration\n\n  shakeQueue.push({\n    newAngle,\n    newDuration\n  });\n  processShakeQueue();\n\n  // Clear any existing reset timeout\n  clearTimeout(resetTimeout);\n\n  // Set a new reset timeout for 0.5 seconds\n  resetTimeout = setTimeout(() => {\n    pressCount = 0;\n  }, 500);\n});\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  if (window.location.pathname === '/index.html') {\n    // Check if the current page is not the homepage\n    const overlay = document.getElementById('overlay');\n    overlay.style.pointerEvents = 'none'; // Disable pointer events to allow clicks\n  }\n  changeVideoSource();\n  const videoElement = document.getElementById('videoElement');\n  const fallbackImage = document.getElementById('imageElement');\n  videoElement.style.opacity = '1';\n  // Function to handle video playback and related tasks\n  function handleVideoPlayback() {\n    // Create a flag to indicate whether the video is loaded successfully\n    let videoLoaded = false;\n\n    // Create a timeout to handle the scenario where loadeddata is not fired within 4 seconds\n    const loadTimeout = setTimeout(() => {\n      if (!videoLoaded) {\n        handleVideoError(new Error('Timeout waiting for video to load'));\n      }\n    }, 3000); // 3 seconds\n\n    // Function to handle video errors\n    function handleVideoError(error) {\n      console.error('Error:', error);\n      canPlayVideo = false;\n      videoElement.style.display = 'none';\n      fallbackImage.style.display = 'block';\n      fallbackImage.style.opacity = '1';\n      const checkDimensions = setInterval(function () {\n        if (imageElement.naturalWidth > 0 && imageElement.naturalHeight > 0) {\n          const aspectRatio = imageElement.naturalWidth / imageElement.naturalHeight;\n          // Check if the aspect ratio is approximately 9:16\n          if (Math.abs(aspectRatio - 9 / 16) < 0.01) {\n            clearInterval(checkDimensions);\n            updateTitles();\n            setTimeout(() => {\n              displayWelcomeContent();\n            }, 1000);\n          }\n        }\n      }, 100); // Check every 100ms until dimensions are available\n    }\n\n    // Listen for the loadeddata event to ensure the video is ready\n    videoElement.addEventListener('loadeddata', () => {\n      videoLoaded = true;\n      clearTimeout(loadTimeout); // Clear the timeout since the video is loaded\n\n      // Attempt to play the video\n      videoElement.play().then(() => {\n        const checkDimensions = setInterval(function () {\n          if (videoElement.videoWidth > 0 && videoElement.videoHeight > 0) {\n            const aspectRatio = videoElement.videoWidth / videoElement.videoHeight;\n            // Check if the aspect ratio is approximately 9:16\n            if (Math.abs(aspectRatio - 9 / 16) < 0.01) {\n              clearInterval(checkDimensions);\n              createHint();\n              setupDescriptionOverlay();\n              updateTitles();\n              videoElement.addEventListener('click', () => {\n                if (videoElement.muted) {\n                  videoElement.muted = false;\n                  videoElement.style.filter = 'grayscale(0%)';\n                  // Update the description content\n                  const descriptionContentElement = document.getElementById('descriptionContent');\n                  descriptionContentElement.innerHTML = `${currentVideoSource.description}<br><p>Click to silence and fade!</p>`;\n                } else {\n                  videoElement.muted = true;\n                  videoElement.style.filter = 'grayscale(85%)';\n                  // Update the description content\n                  const descriptionContentElement = document.getElementById('descriptionContent');\n                  descriptionContentElement.innerHTML = `${currentVideoSource.description}<br><p>Click for color and sound!</p>`;\n                }\n              });\n              preloadVideos();\n              videoTransition();\n              setTimeout(() => {\n                displayWelcomeContent();\n              }, 1000);\n            }\n          }\n        }, 100); // Check every 100ms until dimensions are available\n      }).catch(error => {\n        // Handle errors that occur during video playback\n        handleVideoError(error);\n      });\n    }, {\n      once: true\n    });\n\n    // Initial video load attempt\n    try {\n      videoElement.load();\n    } catch (error) {\n      handleVideoError(error);\n    }\n  }\n\n  // Call the function to handle video playback\n  handleVideoPlayback();\n});\nwindow.onresize = () => {\n  // Clear any existing timeout to interrupt the previous typing effect\n  if (currentTimeoutId) {\n    clearTimeout(currentTimeoutId);\n  }\n  console.log(\"resize\");\n  updateTitles();\n  const isDarkMode = document.body.classList.contains('dark-mode');\n  const subtitleElement = document.getElementById('welcomeSubtitle');\n  const textColor = isDarkMode ? '#fafafa' : '#252525'; // Change text color based on theme\n  subtitleElement.style.transition = 'color 0s';\n  subtitleElement.style.color = textColor;\n  subtitleElement.style.transition = '';\n  subtitleElement.style.textAlign = 'justify';\n  subtitleElement.style.textAlignLast = 'justify';\n  subtitleElement.style.MozTextAlignLast = 'justify';\n  document.querySelectorAll('header *').forEach(element => {\n    element.style.transition = 'color 2s';\n    element.style.color = ''; // Reset to original color\n  });\n  document.querySelectorAll('footer *').forEach(element => {\n    element.style.transition = 'color 2s';\n    element.style.color = ''; // Reset to original color\n  });\n  const quoteElement = document.getElementById('welcomeQuote');\n  quoteElement.style.transition = 'color 2s';\n  quoteElement.style.color = ''; // Reset to original color\n\n  const overlay = document.getElementById('overlay');\n  overlay.style.pointerEvents = 'none'; // Disable pointer events to allow clicks\n};","map":{"version":3,"names":["name","document","title","shakeQueue","isShaking","pressCount","pressed","resetTimeout","maxAngle","minDuration","canPlayVideo","currentTimeoutId","videoSources","src","class","description","nonPlayed","currentVideoSource","isMobilePhone","userAgent","navigator","vendor","window","opera","test","isTouchScreen","changeVideoSource","newIndex","Math","floor","random","length","source","splice","videoElement","getElementById","currentSourceElement","querySelector","setAttribute","load","descriptionContentElement","innerHTML","preloadVideos","forEach","videoData","video","createElement","preload","autoplay","loop","muted","style","display","body","appendChild","updateSubtitle","subtitleElement","isMobile","matchMedia","matches","textContent","getTextWidth","text","font","canvas","context","getContext","metrics","measureText","width","getCssStyle","element","prop","getComputedStyle","getPropertyValue","getCanvasFont","el","fontWeight","fontSize","fontFamily","adjustTitle","imageElement","titleElement","compassIcon","mediaElement","mediaHeight","clientHeight","availableWidth","clientWidth","titleFontSize","iconScaleFactor","textWidth","replace","adjustSubtitle","subtitleFontSize","totalHeight","subtitleLineHeight","lineHeight","updateTitles","isSmallScreen","typeWriterEffect","delay","callback","clearTimeout","index","spans","i","span","className","color","push","reveal","isDarkMode","classList","contains","textColor","transition","setTimeout","videoTransition","fadeOutApplied","transitionOverlay","addEventListener","timeLeft","duration","currentTime","opacity","processShakeQueue","newAngle","newDuration","shift","setProperty","add","remove","switchVideoSource","descriptionOverlay","currentSource","getAttribute","newVideoSource","pause","play","once","createHint","hintParagraph","id","float","headerElement","insertBefore","children","compassFlash","toggleTipColor","hintFlash","setInterval","clearInterval","displayWelcomeContent","subtitleText","textAlign","textAlignLast","MozTextAlignLast","querySelectorAll","quoteElement","overlay","pointerEvents","setupDescriptionOverlay","error","console","min","max","location","pathname","fallbackImage","handleVideoPlayback","videoLoaded","loadTimeout","handleVideoError","Error","checkDimensions","naturalWidth","naturalHeight","aspectRatio","abs","then","videoWidth","videoHeight","filter","catch","onresize","log"],"sources":["/Users/henry/Desktop/personalpage/src/components/IndexPage.vue"],"sourcesContent":["<template>\n   <div>\n     <h1></h1>\n     <article>\n      <div class=\"image-left container\" style=\"margin: auto;\">\n         <video class=\"homevideo1\" id=\"videoElement\" style=\"opacity: 0;\" muted autoplay loop playsinline>\n            <source src=\"/assets/vid/home1.mp4\" type=\"video/mp4\">\n            Your browser does not support this website.\n         </video>\n         <img id=\"imageElement\" src=\"/assets/img/home1.jpg\" alt=\"Travel\" class=\"fallback-image\" style=\"display: none; opacity: 0;\">\n         <div class=\"transition-overlay\" id=\"transitionOverlay\"></div>\n         <div class=\"description-overlay\" id=\"descriptionOverlay\">\n            <div class=\"description-content\" id=\"descriptionContent\"></div>\n         </div>\n         <div class=\"welcome-text\">\n            <h1 id=\"welcomeTitle\" style=\"color: transparent;\">WELC<span id=\"compassContainer\"><i class=\"far fa-compass\" id=\"compassIcon\"></i></span>ME</h1>\n            <h2 id=\"welcomeSubtitle\">Hello! I'm Han-yu (Henry), a junior at HKU, majoring in AI. I love to explore new places and code apps. I'm excited to have you here and ready to share my journey with you!</h2>\n         </div>\n      </div>\n\n      <div id=\"overlay\"></div>\n\n      <br>\n\n      <h3 id=\"welcomeQuote\" style=\"color: transparent;\">Life is an endless adventure<br>into the unknown</h3>\n     </article>\n   </div>\n </template>\n \n <script>\n   export default {\n     name: 'IndexPage'\n   }\n\n  document.title = \"Home | H.W.\";\n\n  let shakeQueue = [];\n  let isShaking = false;\n  let pressCount = 0;\n  let pressed = false;\n  let resetTimeout;\n  const maxAngle = 360; // Maximum angle to prevent excessive shaking\n  const minDuration = 0.2; // Minimum duration to prevent excessive speed\n\n  let canPlayVideo = true;\n\n  let currentTimeoutId; // Variable to store the current timeout ID\n\n  const videoSources = [\n      { src: \"/assets/vid/home1.mp4\", class: \"homevideo1\", description: \"Sunbathing, beers, and ocean breezes on the Mediterranean!\" },\n      { src: \"/assets/vid/home2.mp4\", class: \"homevideo2\", description: \"Ducks enjoying a swim by the oceanside, weaving between the boats.\" },\n      { src: \"/assets/vid/home3.mp4\", class: \"homevideo3\", description: \"A cat strolling on the ancient stone steps, shot in Athens.\" }\n  ];\n\n  let nonPlayed = [...videoSources];\n\n  let currentVideoSource = videoSources[0];\n\n  function isMobilePhone() {\n      const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n      return /android|iPhone|iPod/i.test(userAgent);\n  }\n\n  function isTouchScreen(){\n      const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n      return /android|iPhone|iPad|iPod/i.test(userAgent);\n  }\n\n  function changeVideoSource() {\n      // Get a new random index from nonPlayed\n      const newIndex = Math.floor(Math.random() * nonPlayed.length);\n\n      // Select the new video source using the new index\n      const source = nonPlayed.splice(newIndex, 1)[0]; // Remove the selected video from nonPlayed\n      currentVideoSource = source;\n\n      const videoElement = document.getElementById('videoElement');\n      const currentSourceElement = videoElement.querySelector('source');\n      currentSourceElement.setAttribute('src', source.src)\n      videoElement.setAttribute('class', source.class);\n      videoElement.load();\n\n      // Update the description content\n      const descriptionContentElement = document.getElementById('descriptionContent');\n      descriptionContentElement.innerHTML = `${source.description}<br><p>Click for color and sound!</p>`;\n  }\n\n  function preloadVideos() {\n      videoSources.forEach(videoData => {\n          const video = document.createElement('video');\n          video.src = videoData.src;\n          video.preload = 'auto';\n          video.autoplay = true;\n          video.loop = true;\n          video.muted = true;\n          video.style.display = 'none'; // Hide the video element\n          document.body.appendChild(video);\n      });\n  }\n\n  function updateSubtitle() {\n      const subtitleElement = document.getElementById('welcomeSubtitle');\n      const isMobile = window.matchMedia(\"(max-width: 768px)\").matches;\n\n      if (isMobile) {\n          subtitleElement.textContent = \"Hello! I'm Han-yu, a junior at HKU, majoring in AI. I love to explore new places and code apps. I'm ready to share my journey with you!\";\n      } else {\n          subtitleElement.textContent = \"Hello! I'm Han-yu (Henry), a junior at HKU, majoring in Applied AI. I love to explore new places and code apps. I'm excited to have you here and share my journey with you!\";\n      }\n  }\n\n  function getTextWidth(text, font) {\n      const canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement(\"canvas\"));\n      const context = canvas.getContext(\"2d\");\n      context.font = font;\n      const metrics = context.measureText(text);\n      return metrics.width;\n  }\n\n  function getCssStyle(element, prop) {\n      return window.getComputedStyle(element, null).getPropertyValue(prop);\n  }\n\n  function getCanvasFont(el) {\n      const fontWeight = getCssStyle(el, 'font-weight') || 'normal';\n      const fontSize = getCssStyle(el, 'font-size') || '16px';\n      const fontFamily = getCssStyle(el, 'font-family') || 'Times New Roman';\n      return `${fontWeight} ${fontSize} ${fontFamily}`;\n  }\n\n  function adjustTitle() {\n      const videoElement = document.getElementById('videoElement');\n      const imageElement = document.getElementById('imageElement');\n      const titleElement = document.getElementById('welcomeTitle');\n      const subtitleElement = document.getElementById('welcomeSubtitle');\n      const compassIcon = document.getElementById('compassIcon');\n\n      const mediaElement = videoElement.style.display !== 'none' ? videoElement : imageElement;\n      const mediaHeight = mediaElement.clientHeight;\n      const availableWidth = document.querySelector('.welcome-text').clientWidth;\n\n      // Adjust the font size and line height of the title to fit the width\n      let titleFontSize = 1; // Start with a smaller font size\n      titleElement.style.fontSize = `${titleFontSize}em`;\n      \n      let iconScaleFactor = 0.3; // Scale factor to adjust the icon size relative to the text\n      compassIcon.style.fontSize = `${titleFontSize * iconScaleFactor}em`;\n      \n      let textWidth = getTextWidth(titleElement.textContent.replace('O', ''), getCanvasFont(titleElement)) + compassIcon.clientWidth;\n      while (textWidth < availableWidth && titleFontSize < 5) { // Constrain max font size to 5em\n          titleFontSize += 0.1;\n          titleElement.style.fontSize = `${titleFontSize}em`;\n          compassIcon.style.fontSize = `${titleFontSize * iconScaleFactor}em`;\n          textWidth = getTextWidth(titleElement.textContent.replace('O', ''), getCanvasFont(titleElement)) + compassIcon.clientWidth;\n      }\n\n      while (textWidth > availableWidth && titleFontSize > 0.5) { // Constrain min font size to 0.5em\n          titleFontSize -= 0.1;\n          titleElement.style.fontSize = `${titleFontSize}em`;\n          compassIcon.style.fontSize = `${titleFontSize * iconScaleFactor}em`;\n          textWidth = getTextWidth(titleElement.textContent.replace('O', ''), getCanvasFont(titleElement)) + compassIcon.clientWidth;\n      }\n  }\n\n  function adjustSubtitle() {\n      const videoElement = document.getElementById('videoElement');\n      const imageElement = document.getElementById('imageElement');\n      const titleElement = document.getElementById('welcomeTitle');\n      const subtitleElement = document.getElementById('welcomeSubtitle');\n      const compassIcon = document.getElementById('compassIcon');\n\n      const mediaElement = videoElement.style.display !== 'none' ? videoElement : imageElement;\n      const mediaHeight = mediaElement.clientHeight;\n      const availableWidth = document.querySelector('.welcome-text').clientWidth;\n\n      // Fix the title font size and adjust the subtitle to match the height of the video\n      let subtitleFontSize = 1;\n      subtitleElement.style.fontSize = `${subtitleFontSize}em`;\n      let totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n\n      while (totalHeight < mediaHeight && subtitleFontSize < 3) { // Constrain max font size to 3em\n          subtitleFontSize += 0.01;\n          subtitleElement.style.fontSize = `${subtitleFontSize}em`;\n          totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n      }\n\n      // Reduce font size and line height if the total height exceeds the video height\n      while (totalHeight > mediaHeight && subtitleFontSize > 0.5) { // Ensure font size does not go below 0.5em\n          subtitleFontSize -= 0.01;\n          subtitleElement.style.fontSize = `${subtitleFontSize}em`;\n          totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n      }\n\n      // Adjust the line height of the subtitle element to fit within the media height\n      let subtitleLineHeight = 1.4; // Starting line height\n      subtitleElement.style.lineHeight = subtitleLineHeight;\n      totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n\n      while (totalHeight < mediaHeight && subtitleLineHeight < 2) { // Constrain max line height to 2\n          subtitleLineHeight += 0.1;\n          subtitleElement.style.lineHeight = subtitleLineHeight;\n          totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n      }\n\n      while (totalHeight > mediaHeight && subtitleLineHeight > 1) { // Ensure line height does not go below 1\n          subtitleLineHeight -= 0.1;\n          subtitleElement.style.lineHeight = subtitleLineHeight;\n          totalHeight = titleElement.clientHeight + subtitleElement.clientHeight;\n      }\n  }\n\n  function updateTitles() {\n      updateSubtitle();\n      adjustTitle();\n      const isSmallScreen = window.matchMedia(\"(max-width: 600px)\").matches;\n      if (isSmallScreen) {\n          document.getElementById('welcomeTitle').style.fontSize = '2em';\n          document.getElementById('compassIcon').style.fontSize = '1.1em';\n      }\n      adjustSubtitle();\n  }\n\n  function typeWriterEffect(text, element, delay = 100, callback) {\n      // Clear any existing timeout to interrupt the previous typing effect\n      if (currentTimeoutId) {\n          clearTimeout(currentTimeoutId);\n      }\n\n      element.innerHTML = '';\n      let index = 0;\n      const spans = [];\n\n      // Step 1: Create a span for each character\n      for (let i = 0; i < text.length; i++) {\n          const span = document.createElement('span');\n          span.className = 'typed';\n          span.style.color = 'transparent'; // Initially transparent\n          span.textContent = text[i];\n          element.appendChild(span);\n          spans.push(span);\n      }\n\n      // Step 2: Turn each span into the text color one by one\n      function reveal() {\n          if (index < spans.length) {\n              const isDarkMode = document.body.classList.contains('dark-mode');\n              const textColor = isDarkMode ? '#fafafa' : '#252525'; // Change text color based on theme\n              \n              spans[index].style.transition = `color 2s`;\n              spans[index].style.color = textColor;\n              index++;\n              currentTimeoutId = setTimeout(reveal, delay); // Store the timeout ID\n          } else {\n              if (callback) callback();\n          }\n      }\n\n      reveal();\n  }\n\n  function videoTransition() {\n      let fadeOutApplied = false;\n      const transitionOverlay = document.getElementById('transitionOverlay');\n      transitionOverlay.style.transition = 'opacity 0.3s ease-in-out';\n\n      videoElement.addEventListener('timeupdate', () => {\n          const timeLeft = videoElement.duration - videoElement.currentTime;\n          if (timeLeft < 0.6 && !fadeOutApplied) { // Adjust the time threshold as needed\n              transitionOverlay.style.opacity = '1';\n              fadeOutApplied = true;\n          }\n      });\n\n      videoElement.addEventListener('timeupdate', () => {\n          if (videoElement.currentTime >0.2 && videoElement.currentTime <1.2 ) {\n              transitionOverlay.style.opacity = '0';\n              fadeOutApplied = false; // Reset the flag when the video starts playing again\n          }\n      });\n\n      // videoElement.addEventListener('playing', () => {\n      //     transitionOverlay.style.opacity = '0';\n      //     fadeOutApplied = false; // Reset the flag when the video starts playing again\n      // });\n  }\n\n  function processShakeQueue() {\n      if (shakeQueue.length === 0 || isShaking) return;\n      \n      isShaking = true;\n      const { newAngle, newDuration } = shakeQueue.shift();\n      \n      const compassIcon = document.getElementById('compassIcon');\n      compassIcon.style.setProperty('--shake-angle', `${newAngle}deg`);\n      compassIcon.style.setProperty('--shake-duration', `${newDuration}s`);\n      \n      compassIcon.classList.add('shake');\n      \n      setTimeout(() => {\n          compassIcon.classList.remove('shake');\n          isShaking = false;\n          processShakeQueue(); // Process the next shake in the queue\n      }, newDuration * 1000);\n  }\n\n  function switchVideoSource() {\n      const videoElement = document.getElementById('videoElement');\n      const transitionOverlay = document.getElementById('transitionOverlay');\n      const descriptionOverlay = document.getElementById('descriptionOverlay');\n      const currentSourceElement = videoElement.querySelector('source');\n      const currentSource = currentSourceElement.getAttribute('src');\n\n      // If nonPlayed is empty, refill it with a copy of videoSources\n      if (nonPlayed.length === 0) {\n          nonPlayed = [...videoSources];\n      }\n\n      // Get a new random index from nonPlayed\n      const newIndex = Math.floor(Math.random() * nonPlayed.length);\n\n      // Select the new video source using the new index\n      const newVideoSource = nonPlayed.splice(newIndex, 1)[0]; // Remove the selected video from nonPlayed\n      currentVideoSource = newVideoSource;\n\n      // Apply flip effect\n      if (!isMobilePhone()) {\n          descriptionOverlay.style.opacity = 0.5;\n      }\n      videoElement.classList.remove('flip2');\n      videoElement.classList.add('flip');\n      transitionOverlay.classList.remove('flip2');\n      transitionOverlay.classList.add('flip');\n      descriptionOverlay.classList.remove('flip2');\n      descriptionOverlay.classList.add('flip');\n\n      // Listen for the midpoint of the flip to change the source\n      videoElement.addEventListener('animationend', () => {\n          // Change the source and load the new video\n          videoElement.pause(); // Pause the video before changing the source\n          videoElement.querySelector('source').src = newVideoSource.src;\n          videoElement.load(); // Load the new video source\n\n          // Restart the flip animation for the second half of the transition\n          videoElement.classList.remove('flip');\n          transitionOverlay.classList.remove('flip');\n          descriptionOverlay.classList.remove('flip');\n\n          // Play the new video source\n          videoElement.play();\n\n          if (!videoElement.muted) {\n              const descriptionContentElement = document.getElementById('descriptionContent');\n              descriptionContentElement.innerHTML = `${currentVideoSource.description}<br><p>Click to silence and fade!</p>`;\n          } else {\n              const descriptionContentElement = document.getElementById('descriptionContent');\n              descriptionContentElement.innerHTML = `${currentVideoSource.description}<br><p>Click for color and sound!</p>`;\n          }\n\n          // Add the flip class back to complete the flip animation\n          videoElement.classList.add('flip2');\n          transitionOverlay.classList.add('flip2');\n          descriptionOverlay.classList.add('flip2');\n\n          // Ensure the flip class is removed after the animation completes\n          videoElement.addEventListener('animationend', () => {\n              videoElement.classList.remove('flip2');\n              transitionOverlay.classList.remove('flip2');\n              descriptionOverlay.classList.remove('flip2');\n              videoElement.setAttribute('class', newVideoSource.class);\n              descriptionOverlay.style.opacity = '';\n          }, { once: true });\n      }, { once: true });\n  }\n\n  function createHint() {\n      // Create a new <small> element\n      var hintParagraph = document.createElement(\"small\");\n\n      // Set the class and style of the new <p> element\n      hintParagraph.id = \"hint\";\n      hintParagraph.className = \"tipcolor-2\";\n      hintParagraph.style.float = \"right\";\n\n      // Set the text content of the new element\n      hintParagraph.textContent = 'Click the compass!';\n\n      // Find the element with the class \"header\"\n      var headerElement = document.querySelector(\".header-title\");\n\n      // Append the new <p> element to the header element\n      if (headerElement) {\n          headerElement.insertBefore(hintParagraph, headerElement.children[2] || null);\n      }\n  }\n\n  function compassFlash() {\n      const hintParagraph = document.getElementById('hint');\n      hintParagraph.classList.remove(\"tipcolor-2\");\n      hintParagraph.classList.add(\"tipcolor-1\");\n\n      const compassIcon = document.getElementById('compassIcon');\n      compassIcon.style.transition = 'color 1.5s'\n\n      // Function to toggle between the classes\n      function toggleTipColor() {\n          compassIcon.classList.add(\"tipcolor-1\");\n          setTimeout(function() {\n              compassIcon.classList.remove(\"tipcolor-1\");\n          }, 800);\n      }\n\n      // Set an interval to toggle the classes every 4000ms if pressed is false\n      const hintFlash = setInterval(function() {\n          if (!pressed) {\n              toggleTipColor();\n          } else {\n              clearInterval(hintFlash); // Clear the interval\n          }\n      }, 2400);\n  }\n\n  function displayWelcomeContent() {\n      const titleElement = document.getElementById('welcomeTitle');\n      titleElement.style.transition = 'color 2s';\n      titleElement.style.color = ''; // Reset to original color\n      const subtitleText = document.getElementById('welcomeSubtitle').textContent;\n      const subtitleElement = document.getElementById('welcomeSubtitle');\n      subtitleElement.style.textAlign = 'justify'; // Change to justify after typing is complete\n      subtitleElement.style.textAlignLast = 'justify'; // Change to justify after typing is complete\n      subtitleElement.style.MozTextAlignLast = 'justify'; // Change to justify after typing is complete\n\n      typeWriterEffect(subtitleText, subtitleElement, 10, () => {\n          setTimeout(() => {\n              document.querySelectorAll('header *').forEach(element => {\n                  element.style.transition = 'color 2s';\n                  element.style.color = ''; // Reset to original color\n              });\n              document.querySelectorAll('footer *').forEach(element => {\n                  element.style.transition = 'color 2s';\n                  element.style.color = ''; // Reset to original color\n              });\n              const quoteElement = document.getElementById('welcomeQuote');\n              quoteElement.style.transition = 'color 2s';\n              quoteElement.style.color = ''; // Reset to original color\n\n              const overlay = document.getElementById('overlay');\n              overlay.style.pointerEvents = 'none'; // Disable pointer events to allow clicks\n\n              setTimeout(() => {\n                  compassFlash();\n\n                  // Reset the transition property after the color transition is complete\n                  setTimeout(() => {\n                      document.querySelectorAll('header *').forEach(element => {\n                          element.style.transition = 'color 0.5s';\n                      });\n                      document.querySelectorAll('footer *').forEach(element => {\n                          element.style.transition = 'color 0.5s';\n                      });\n                  }, 2000); // Match this duration with the color transition time (2 seconds)\n              }, 1000);\n          }, 1000);\n      });\n  }\n\n  function setupDescriptionOverlay() {\n      const videoElement = document.getElementById('videoElement');\n      const descriptionOverlay = document.querySelector('.description-overlay');\n\n      if (!isTouchScreen()) {\n          videoElement.addEventListener('mouseenter', () => {\n              descriptionOverlay.style.opacity = '0.5';\n          });\n\n          videoElement.addEventListener('mouseleave', () => {\n              descriptionOverlay.style.opacity = '0';\n          });\n      }\n  }\n\n  document.getElementById('compassIcon').addEventListener('click', function() {\n\n      if (canPlayVideo) {\n          switchVideoSource();\n      }\n\n      pressed = true;\n      const compassIcon = document.getElementById('compassIcon');\n      const hintParagraph = document.getElementById('hint');\n      compassIcon.classList.remove(\"tipcolor-1\");\n      compassIcon.classList.remove(\"tipcolor-2\");\n      try{\n          hintParagraph.classList.add(\"tipcolor-2\");\n      } catch (error) {\n          console.error(error);\n      } \n\n      pressCount++;\n      \n      // Calculate new angle and duration based on the number of presses\n      let newAngle = Math.min(15 + pressCount * 6, maxAngle); // Increase angle by 6 degrees per press, up to maxAngle\n      let newDuration = Math.max(0.8 - pressCount * 0.06, minDuration); // Decrease duration by 0.06s per press, down to minDuration\n      \n      shakeQueue.push({ newAngle, newDuration });\n      processShakeQueue();\n      \n      // Clear any existing reset timeout\n      clearTimeout(resetTimeout);\n      \n      // Set a new reset timeout for 0.5 seconds\n      resetTimeout = setTimeout(() => {\n          pressCount = 0;\n      }, 500);\n  });\n\n  document.addEventListener(\"DOMContentLoaded\", function() {\n\n      if (window.location.pathname === '/index.html') { // Check if the current page is not the homepage\n          const overlay = document.getElementById('overlay');\n          overlay.style.pointerEvents = 'none'; // Disable pointer events to allow clicks\n      }\n\n      changeVideoSource();\n\n      const videoElement = document.getElementById('videoElement');\n      const fallbackImage = document.getElementById('imageElement');\n      videoElement.style.opacity = '1';\n      // Function to handle video playback and related tasks\n      function handleVideoPlayback() {\n          // Create a flag to indicate whether the video is loaded successfully\n          let videoLoaded = false;\n\n          // Create a timeout to handle the scenario where loadeddata is not fired within 4 seconds\n          const loadTimeout = setTimeout(() => {\n              if (!videoLoaded) {\n                  handleVideoError(new Error('Timeout waiting for video to load'));\n              }\n          }, 3000); // 3 seconds\n\n          // Function to handle video errors\n          function handleVideoError(error) {\n              console.error('Error:', error);\n              canPlayVideo = false;\n              videoElement.style.display = 'none';\n              fallbackImage.style.display = 'block';\n              fallbackImage.style.opacity = '1';\n              const checkDimensions = setInterval(function() {\n                  if (imageElement.naturalWidth > 0 && imageElement.naturalHeight > 0) {\n                      const aspectRatio = imageElement.naturalWidth / imageElement.naturalHeight;\n                      // Check if the aspect ratio is approximately 9:16\n                      if (Math.abs(aspectRatio - (9 / 16)) < 0.01) {\n                          clearInterval(checkDimensions);\n\n                          updateTitles();\n\n                          setTimeout(() => {\n                              displayWelcomeContent();\n                          }, 1000);\n                      }\n                  }\n              }, 100); // Check every 100ms until dimensions are available\n          }\n\n          // Listen for the loadeddata event to ensure the video is ready\n          videoElement.addEventListener('loadeddata', () => {\n              videoLoaded = true;\n              clearTimeout(loadTimeout); // Clear the timeout since the video is loaded\n\n              // Attempt to play the video\n              videoElement.play().then(() => {\n                  const checkDimensions = setInterval(function() {\n                      if (videoElement.videoWidth > 0 && videoElement.videoHeight > 0) {\n                          const aspectRatio = videoElement.videoWidth / videoElement.videoHeight;\n                          // Check if the aspect ratio is approximately 9:16\n                          if (Math.abs(aspectRatio - (9 / 16)) < 0.01) {\n                              clearInterval(checkDimensions);\n\n                              createHint();\n                              setupDescriptionOverlay();\n                              updateTitles();\n\n                              videoElement.addEventListener('click', () => {\n                                  if (videoElement.muted) {\n                                      videoElement.muted = false;\n                                      videoElement.style.filter = 'grayscale(0%)';\n                                      // Update the description content\n                                      const descriptionContentElement = document.getElementById('descriptionContent');\n                                      descriptionContentElement.innerHTML = `${currentVideoSource.description}<br><p>Click to silence and fade!</p>`;\n                                  } else {\n                                      videoElement.muted = true;\n                                      videoElement.style.filter = 'grayscale(85%)';\n                                      // Update the description content\n                                      const descriptionContentElement = document.getElementById('descriptionContent');\n                                      descriptionContentElement.innerHTML = `${currentVideoSource.description}<br><p>Click for color and sound!</p>`;\n                                  }\n                              });\n\n                              preloadVideos();\n                              videoTransition();\n\n                              setTimeout(() => {\n                                  displayWelcomeContent();\n                              }, 1000);\n                          }\n                      }\n                  }, 100); // Check every 100ms until dimensions are available\n              }).catch((error) => {\n                  // Handle errors that occur during video playback\n                  handleVideoError(error);\n              });\n          }, { once: true });\n\n          // Initial video load attempt\n          try {\n              videoElement.load();\n          } catch (error) {\n              handleVideoError(error);\n          }\n      }\n\n      // Call the function to handle video playback\n      handleVideoPlayback();\n  });\n\n  window.onresize = () => {\n      // Clear any existing timeout to interrupt the previous typing effect\n      if (currentTimeoutId) {\n          clearTimeout(currentTimeoutId);\n      }\n      console.log(\"resize\")\n      updateTitles();\n      const isDarkMode = document.body.classList.contains('dark-mode');\n      const subtitleElement = document.getElementById('welcomeSubtitle');\n      const textColor = isDarkMode ? '#fafafa' : '#252525'; // Change text color based on theme\n      subtitleElement.style.transition = 'color 0s';\n      subtitleElement.style.color = textColor;\n      subtitleElement.style.transition = '';\n      subtitleElement.style.textAlign = 'justify';\n      subtitleElement.style.textAlignLast = 'justify';\n      subtitleElement.style.MozTextAlignLast = 'justify';\n      document.querySelectorAll('header *').forEach(element => {\n          element.style.transition = 'color 2s';\n          element.style.color = ''; // Reset to original color\n      });\n      document.querySelectorAll('footer *').forEach(element => {\n          element.style.transition = 'color 2s';\n          element.style.color = ''; // Reset to original color\n      });\n      const quoteElement = document.getElementById('welcomeQuote');\n      quoteElement.style.transition = 'color 2s';\n      quoteElement.style.color = ''; // Reset to original color\n\n      const overlay = document.getElementById('overlay');\n      overlay.style.pointerEvents = 'none'; // Disable pointer events to allow clicks\n  };\n</script>\n\n<link rel=\"stylesheet\" href=\"/assets/css/home.css\">"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}